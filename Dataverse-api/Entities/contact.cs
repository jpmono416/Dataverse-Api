using Dataverse_api.Entities.OptionSets;

#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dataverse_api.Entities
{
	
	
	/// <summary>
	/// Account role of the contact.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_accountrolecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DecisionMaker = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Employee = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Influencer = 3,
	}
	
	/// <summary>
	/// Type of address for address 1, such as billing, shipping, or primary address.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_address1_addresstypecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BillTo = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ShipTo = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Primary = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Other = 4,
	}
	
	/// <summary>
	/// Freight terms for address 1.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_address1_freighttermscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FOB = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NoCharge = 2,
	}
	
	/// <summary>
	/// Method of shipment for address 1.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_address1_shippingmethodcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Airborne = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DHL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FedEx = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PostalMail = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FullLoad = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WillCall = 7,
	}
	
	/// <summary>
	/// Type of address for address 2, such as billing, shipping, or primary address.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_address2_addresstypecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Freight terms for address 2.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_address2_freighttermscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Method of shipment for address 2.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_address2_shippingmethodcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Type of address for address 3, such as billing, shipping, or primary address.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_address3_addresstypecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Freight terms for address 3.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_address3_freighttermscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Method of shipment for address 3.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_address3_shippingmethodcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Size of the contact's business.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_customersizecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Type of business associated with the contact.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_customertypecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Formal education level that the contact has attained.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_educationcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Marital status of the contact.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_familystatuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Single = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Married = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Divorced = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Widowed = 4,
	}
	
	/// <summary>
	/// Gender of the contact.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_gendercode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Male = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Female = 2,
	}
	
	/// <summary>
	/// Information about whether the contact has children.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_haschildrencode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Source of the lead of the contact.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_leadsourcecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Indicate buying influence using label
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_msdyn_decisioninfluencetag
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Decisionmaker = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Influencer = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Blocker = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unknown = 3,
	}
	
	/// <summary>
	/// For Internal Use only
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_msdyn_orgchangestatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NoFeedback = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotatCompany = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ignore = 2,
	}
	
	/// <summary>
	/// Payment terms for the contact.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_paymenttermscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Net30 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_210Net30 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Net45 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Net60 = 4,
	}
	
	/// <summary>
	/// Day of the week that the contact prefers for scheduling service activities.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_preferredappointmentdaycode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Sunday = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Monday = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tuesday = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Wednesday = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thursday = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Friday = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Saturday = 6,
	}
	
	/// <summary>
	/// Time of day that the contact prefers for scheduling service activities.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_preferredappointmenttimecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Morning = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Afternoon = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Evening = 3,
	}
	
	/// <summary>
	/// Preferred contact method for the contact.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_preferredcontactmethodcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Any = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Email = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Phone = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Fax = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Mail = 5,
	}
	
	/// <summary>
	/// Method of shipping for the contact.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_shippingmethodcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Status of the contact.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the contact.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 2,
	}
	
	/// <summary>
	/// Unique identifier of the territory to which the contact is assigned.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum contact_territorycode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Person with whom a business unit has a relationship, such as customer, supplier, and colleague.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("contact")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public partial class Contact : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Contact() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "contact";
		
		public const string EntityLogicalCollectionName = "contacts";
		
		public const string EntitySetName = "contacts";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((PropertyChanged != null))
			{
				PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((PropertyChanging != null))
			{
				PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the account with which the contact is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public Microsoft.Xrm.Sdk.EntityReference AccountId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
			}
		}
		
		/// <summary>
		/// Select the contact's role within the company or sales process, such as decision maker, employee, or influencer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountrolecode")]
		public virtual contact_accountrolecode? AccountRoleCode
		{
			get
			{
				return ((contact_accountrolecode?)(EntityOptionSetEnum.GetEnum(this, "accountrolecode")));
			}
			set
			{
				OnPropertyChanging("AccountRoleCode");
				SetAttributeValue("accountrolecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("AccountRoleCode");
			}
		}
		
		/// <summary>
		/// Unique identifier for address 1.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addressid")]
		public Nullable<Guid> Address1_AddressId
		{
			get
			{
				return GetAttributeValue<Nullable<Guid>>("address1_addressid");
			}
			set
			{
				OnPropertyChanging("Address1_AddressId");
				SetAttributeValue("address1_addressid", value);
				OnPropertyChanged("Address1_AddressId");
			}
		}
		
		/// <summary>
		/// Select the primary address type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_addresstypecode")]
		public virtual contact_address1_addresstypecode? Address1_AddressTypeCode
		{
			get
			{
				return ((contact_address1_addresstypecode?)(EntityOptionSetEnum.GetEnum(this, "address1_addresstypecode")));
			}
			set
			{
				OnPropertyChanging("Address1_AddressTypeCode");
				SetAttributeValue("address1_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("Address1_AddressTypeCode");
			}
		}
		
		/// <summary>
		/// Type the city for the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_city")]
		public string Address1_City
		{
			get
			{
				return GetAttributeValue<string>("address1_city");
			}
			set
			{
				OnPropertyChanging("Address1_City");
				SetAttributeValue("address1_city", value);
				OnPropertyChanged("Address1_City");
			}
		}
		
		/// <summary>
		/// Shows the complete primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_composite")]
		public string Address1_Composite
		{
			get
			{
				return GetAttributeValue<string>("address1_composite");
			}
		}
		
		/// <summary>
		/// Type the country or region for the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_country")]
		public string Address1_Country
		{
			get
			{
				return GetAttributeValue<string>("address1_country");
			}
			set
			{
				OnPropertyChanging("Address1_Country");
				SetAttributeValue("address1_country", value);
				OnPropertyChanged("Address1_Country");
			}
		}
		
		/// <summary>
		/// Type the county for the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_county")]
		public string Address1_County
		{
			get
			{
				return GetAttributeValue<string>("address1_county");
			}
			set
			{
				OnPropertyChanging("Address1_County");
				SetAttributeValue("address1_county", value);
				OnPropertyChanged("Address1_County");
			}
		}
		
		/// <summary>
		/// Type the fax number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_fax")]
		public string Address1_Fax
		{
			get
			{
				return GetAttributeValue<string>("address1_fax");
			}
			set
			{
				OnPropertyChanging("Address1_Fax");
				SetAttributeValue("address1_fax", value);
				OnPropertyChanged("Address1_Fax");
			}
		}
		
		/// <summary>
		/// Select the freight terms for the primary address to make sure shipping orders are processed correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_freighttermscode")]
		public virtual contact_address1_freighttermscode? Address1_FreightTermsCode
		{
			get
			{
				return ((contact_address1_freighttermscode?)(EntityOptionSetEnum.GetEnum(this, "address1_freighttermscode")));
			}
			set
			{
				OnPropertyChanging("Address1_FreightTermsCode");
				SetAttributeValue("address1_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("Address1_FreightTermsCode");
			}
		}
		
		/// <summary>
		/// Type the latitude value for the primary address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_latitude")]
		public Nullable<double> Address1_Latitude
		{
			get
			{
				return GetAttributeValue<Nullable<double>>("address1_latitude");
			}
			set
			{
				OnPropertyChanging("Address1_Latitude");
				SetAttributeValue("address1_latitude", value);
				OnPropertyChanged("Address1_Latitude");
			}
		}
		
		/// <summary>
		/// Type the first line of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line1")]
		public string Address1_Line1
		{
			get
			{
				return GetAttributeValue<string>("address1_line1");
			}
			set
			{
				OnPropertyChanging("Address1_Line1");
				SetAttributeValue("address1_line1", value);
				OnPropertyChanged("Address1_Line1");
			}
		}
		
		/// <summary>
		/// Type the second line of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line2")]
		public string Address1_Line2
		{
			get
			{
				return GetAttributeValue<string>("address1_line2");
			}
			set
			{
				OnPropertyChanging("Address1_Line2");
				SetAttributeValue("address1_line2", value);
				OnPropertyChanged("Address1_Line2");
			}
		}
		
		/// <summary>
		/// Type the third line of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_line3")]
		public string Address1_Line3
		{
			get
			{
				return GetAttributeValue<string>("address1_line3");
			}
			set
			{
				OnPropertyChanging("Address1_Line3");
				SetAttributeValue("address1_line3", value);
				OnPropertyChanged("Address1_Line3");
			}
		}
		
		/// <summary>
		/// Type the longitude value for the primary address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_longitude")]
		public Nullable<double> Address1_Longitude
		{
			get
			{
				return GetAttributeValue<Nullable<double>>("address1_longitude");
			}
			set
			{
				OnPropertyChanging("Address1_Longitude");
				SetAttributeValue("address1_longitude", value);
				OnPropertyChanged("Address1_Longitude");
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the primary address, such as Corporate Headquarters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_name")]
		public string Address1_Name
		{
			get
			{
				return GetAttributeValue<string>("address1_name");
			}
			set
			{
				OnPropertyChanging("Address1_Name");
				SetAttributeValue("address1_name", value);
				OnPropertyChanged("Address1_Name");
			}
		}
		
		/// <summary>
		/// Type the ZIP Code or postal code for the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postalcode")]
		public string Address1_PostalCode
		{
			get
			{
				return GetAttributeValue<string>("address1_postalcode");
			}
			set
			{
				OnPropertyChanging("Address1_PostalCode");
				SetAttributeValue("address1_postalcode", value);
				OnPropertyChanged("Address1_PostalCode");
			}
		}
		
		/// <summary>
		/// Type the post office box number of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_postofficebox")]
		public string Address1_PostOfficeBox
		{
			get
			{
				return GetAttributeValue<string>("address1_postofficebox");
			}
			set
			{
				OnPropertyChanging("Address1_PostOfficeBox");
				SetAttributeValue("address1_postofficebox", value);
				OnPropertyChanged("Address1_PostOfficeBox");
			}
		}
		
		/// <summary>
		/// Type the name of the main contact at the account's primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_primarycontactname")]
		public string Address1_PrimaryContactName
		{
			get
			{
				return GetAttributeValue<string>("address1_primarycontactname");
			}
			set
			{
				OnPropertyChanging("Address1_PrimaryContactName");
				SetAttributeValue("address1_primarycontactname", value);
				OnPropertyChanged("Address1_PrimaryContactName");
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_shippingmethodcode")]
		public virtual contact_address1_shippingmethodcode? Address1_ShippingMethodCode
		{
			get
			{
				return ((contact_address1_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "address1_shippingmethodcode")));
			}
			set
			{
				OnPropertyChanging("Address1_ShippingMethodCode");
				SetAttributeValue("address1_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("Address1_ShippingMethodCode");
			}
		}
		
		/// <summary>
		/// Type the state or province of the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_stateorprovince")]
		public string Address1_StateOrProvince
		{
			get
			{
				return GetAttributeValue<string>("address1_stateorprovince");
			}
			set
			{
				OnPropertyChanging("Address1_StateOrProvince");
				SetAttributeValue("address1_stateorprovince", value);
				OnPropertyChanged("Address1_StateOrProvince");
			}
		}
		
		/// <summary>
		/// Type the main phone number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone1")]
		public string Address1_Telephone1
		{
			get
			{
				return GetAttributeValue<string>("address1_telephone1");
			}
			set
			{
				OnPropertyChanging("Address1_Telephone1");
				SetAttributeValue("address1_telephone1", value);
				OnPropertyChanged("Address1_Telephone1");
			}
		}
		
		/// <summary>
		/// Type a second phone number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone2")]
		public string Address1_Telephone2
		{
			get
			{
				return GetAttributeValue<string>("address1_telephone2");
			}
			set
			{
				OnPropertyChanging("Address1_Telephone2");
				SetAttributeValue("address1_telephone2", value);
				OnPropertyChanged("Address1_Telephone2");
			}
		}
		
		/// <summary>
		/// Type a third phone number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_telephone3")]
		public string Address1_Telephone3
		{
			get
			{
				return GetAttributeValue<string>("address1_telephone3");
			}
			set
			{
				OnPropertyChanging("Address1_Telephone3");
				SetAttributeValue("address1_telephone3", value);
				OnPropertyChanged("Address1_Telephone3");
			}
		}
		
		/// <summary>
		/// Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_upszone")]
		public string Address1_UPSZone
		{
			get
			{
				return GetAttributeValue<string>("address1_upszone");
			}
			set
			{
				OnPropertyChanging("Address1_UPSZone");
				SetAttributeValue("address1_upszone", value);
				OnPropertyChanged("Address1_UPSZone");
			}
		}
		
		/// <summary>
		/// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address1_utcoffset")]
		public Nullable<int> Address1_UTCOffset
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("address1_utcoffset");
			}
			set
			{
				OnPropertyChanging("Address1_UTCOffset");
				SetAttributeValue("address1_utcoffset", value);
				OnPropertyChanged("Address1_UTCOffset");
			}
		}
		
		/// <summary>
		/// Unique identifier for address 2.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addressid")]
		public Nullable<Guid> Address2_AddressId
		{
			get
			{
				return GetAttributeValue<Nullable<Guid>>("address2_addressid");
			}
			set
			{
				OnPropertyChanging("Address2_AddressId");
				SetAttributeValue("address2_addressid", value);
				OnPropertyChanged("Address2_AddressId");
			}
		}
		
		/// <summary>
		/// Select the secondary address type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_addresstypecode")]
		public virtual contact_address2_addresstypecode? Address2_AddressTypeCode
		{
			get
			{
				return ((contact_address2_addresstypecode?)(EntityOptionSetEnum.GetEnum(this, "address2_addresstypecode")));
			}
			set
			{
				OnPropertyChanging("Address2_AddressTypeCode");
				SetAttributeValue("address2_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("Address2_AddressTypeCode");
			}
		}
		
		/// <summary>
		/// Type the city for the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_city")]
		public string Address2_City
		{
			get
			{
				return GetAttributeValue<string>("address2_city");
			}
			set
			{
				OnPropertyChanging("Address2_City");
				SetAttributeValue("address2_city", value);
				OnPropertyChanged("Address2_City");
			}
		}
		
		/// <summary>
		/// Shows the complete secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_composite")]
		public string Address2_Composite
		{
			get
			{
				return GetAttributeValue<string>("address2_composite");
			}
		}
		
		/// <summary>
		/// Type the country or region for the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_country")]
		public string Address2_Country
		{
			get
			{
				return GetAttributeValue<string>("address2_country");
			}
			set
			{
				OnPropertyChanging("Address2_Country");
				SetAttributeValue("address2_country", value);
				OnPropertyChanged("Address2_Country");
			}
		}
		
		/// <summary>
		/// Type the county for the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_county")]
		public string Address2_County
		{
			get
			{
				return GetAttributeValue<string>("address2_county");
			}
			set
			{
				OnPropertyChanging("Address2_County");
				SetAttributeValue("address2_county", value);
				OnPropertyChanged("Address2_County");
			}
		}
		
		/// <summary>
		/// Type the fax number associated with the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_fax")]
		public string Address2_Fax
		{
			get
			{
				return GetAttributeValue<string>("address2_fax");
			}
			set
			{
				OnPropertyChanging("Address2_Fax");
				SetAttributeValue("address2_fax", value);
				OnPropertyChanged("Address2_Fax");
			}
		}
		
		/// <summary>
		/// Select the freight terms for the secondary address to make sure shipping orders are processed correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_freighttermscode")]
		public virtual contact_address2_freighttermscode? Address2_FreightTermsCode
		{
			get
			{
				return ((contact_address2_freighttermscode?)(EntityOptionSetEnum.GetEnum(this, "address2_freighttermscode")));
			}
			set
			{
				OnPropertyChanging("Address2_FreightTermsCode");
				SetAttributeValue("address2_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("Address2_FreightTermsCode");
			}
		}
		
		/// <summary>
		/// Type the latitude value for the secondary address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_latitude")]
		public Nullable<double> Address2_Latitude
		{
			get
			{
				return GetAttributeValue<Nullable<double>>("address2_latitude");
			}
			set
			{
				OnPropertyChanging("Address2_Latitude");
				SetAttributeValue("address2_latitude", value);
				OnPropertyChanged("Address2_Latitude");
			}
		}
		
		/// <summary>
		/// Type the first line of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line1")]
		public string Address2_Line1
		{
			get
			{
				return GetAttributeValue<string>("address2_line1");
			}
			set
			{
				OnPropertyChanging("Address2_Line1");
				SetAttributeValue("address2_line1", value);
				OnPropertyChanged("Address2_Line1");
			}
		}
		
		/// <summary>
		/// Type the second line of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line2")]
		public string Address2_Line2
		{
			get
			{
				return GetAttributeValue<string>("address2_line2");
			}
			set
			{
				OnPropertyChanging("Address2_Line2");
				SetAttributeValue("address2_line2", value);
				OnPropertyChanged("Address2_Line2");
			}
		}
		
		/// <summary>
		/// Type the third line of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_line3")]
		public string Address2_Line3
		{
			get
			{
				return GetAttributeValue<string>("address2_line3");
			}
			set
			{
				OnPropertyChanging("Address2_Line3");
				SetAttributeValue("address2_line3", value);
				OnPropertyChanged("Address2_Line3");
			}
		}
		
		/// <summary>
		/// Type the longitude value for the secondary address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_longitude")]
		public Nullable<double> Address2_Longitude
		{
			get
			{
				return GetAttributeValue<Nullable<double>>("address2_longitude");
			}
			set
			{
				OnPropertyChanging("Address2_Longitude");
				SetAttributeValue("address2_longitude", value);
				OnPropertyChanged("Address2_Longitude");
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the secondary address, such as Corporate Headquarters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_name")]
		public string Address2_Name
		{
			get
			{
				return GetAttributeValue<string>("address2_name");
			}
			set
			{
				OnPropertyChanging("Address2_Name");
				SetAttributeValue("address2_name", value);
				OnPropertyChanged("Address2_Name");
			}
		}
		
		/// <summary>
		/// Type the ZIP Code or postal code for the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postalcode")]
		public string Address2_PostalCode
		{
			get
			{
				return GetAttributeValue<string>("address2_postalcode");
			}
			set
			{
				OnPropertyChanging("Address2_PostalCode");
				SetAttributeValue("address2_postalcode", value);
				OnPropertyChanged("Address2_PostalCode");
			}
		}
		
		/// <summary>
		/// Type the post office box number of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_postofficebox")]
		public string Address2_PostOfficeBox
		{
			get
			{
				return GetAttributeValue<string>("address2_postofficebox");
			}
			set
			{
				OnPropertyChanging("Address2_PostOfficeBox");
				SetAttributeValue("address2_postofficebox", value);
				OnPropertyChanged("Address2_PostOfficeBox");
			}
		}
		
		/// <summary>
		/// Type the name of the main contact at the account's secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_primarycontactname")]
		public string Address2_PrimaryContactName
		{
			get
			{
				return GetAttributeValue<string>("address2_primarycontactname");
			}
			set
			{
				OnPropertyChanging("Address2_PrimaryContactName");
				SetAttributeValue("address2_primarycontactname", value);
				OnPropertyChanged("Address2_PrimaryContactName");
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_shippingmethodcode")]
		public virtual contact_address2_shippingmethodcode? Address2_ShippingMethodCode
		{
			get
			{
				return ((contact_address2_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "address2_shippingmethodcode")));
			}
			set
			{
				OnPropertyChanging("Address2_ShippingMethodCode");
				SetAttributeValue("address2_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("Address2_ShippingMethodCode");
			}
		}
		
		/// <summary>
		/// Type the state or province of the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_stateorprovince")]
		public string Address2_StateOrProvince
		{
			get
			{
				return GetAttributeValue<string>("address2_stateorprovince");
			}
			set
			{
				OnPropertyChanging("Address2_StateOrProvince");
				SetAttributeValue("address2_stateorprovince", value);
				OnPropertyChanged("Address2_StateOrProvince");
			}
		}
		
		/// <summary>
		/// Type the main phone number associated with the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone1")]
		public string Address2_Telephone1
		{
			get
			{
				return GetAttributeValue<string>("address2_telephone1");
			}
			set
			{
				OnPropertyChanging("Address2_Telephone1");
				SetAttributeValue("address2_telephone1", value);
				OnPropertyChanged("Address2_Telephone1");
			}
		}
		
		/// <summary>
		/// Type a second phone number associated with the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone2")]
		public string Address2_Telephone2
		{
			get
			{
				return GetAttributeValue<string>("address2_telephone2");
			}
			set
			{
				OnPropertyChanging("Address2_Telephone2");
				SetAttributeValue("address2_telephone2", value);
				OnPropertyChanged("Address2_Telephone2");
			}
		}
		
		/// <summary>
		/// Type a third phone number associated with the secondary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_telephone3")]
		public string Address2_Telephone3
		{
			get
			{
				return GetAttributeValue<string>("address2_telephone3");
			}
			set
			{
				OnPropertyChanging("Address2_Telephone3");
				SetAttributeValue("address2_telephone3", value);
				OnPropertyChanged("Address2_Telephone3");
			}
		}
		
		/// <summary>
		/// Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_upszone")]
		public string Address2_UPSZone
		{
			get
			{
				return GetAttributeValue<string>("address2_upszone");
			}
			set
			{
				OnPropertyChanging("Address2_UPSZone");
				SetAttributeValue("address2_upszone", value);
				OnPropertyChanged("Address2_UPSZone");
			}
		}
		
		/// <summary>
		/// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address2_utcoffset")]
		public Nullable<int> Address2_UTCOffset
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("address2_utcoffset");
			}
			set
			{
				OnPropertyChanging("Address2_UTCOffset");
				SetAttributeValue("address2_utcoffset", value);
				OnPropertyChanged("Address2_UTCOffset");
			}
		}
		
		/// <summary>
		/// Unique identifier for address 3.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_addressid")]
		public Nullable<Guid> Address3_AddressId
		{
			get
			{
				return GetAttributeValue<Nullable<Guid>>("address3_addressid");
			}
			set
			{
				OnPropertyChanging("Address3_AddressId");
				SetAttributeValue("address3_addressid", value);
				OnPropertyChanged("Address3_AddressId");
			}
		}
		
		/// <summary>
		/// Select the third address type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_addresstypecode")]
		public virtual contact_address3_addresstypecode? Address3_AddressTypeCode
		{
			get
			{
				return ((contact_address3_addresstypecode?)(EntityOptionSetEnum.GetEnum(this, "address3_addresstypecode")));
			}
			set
			{
				OnPropertyChanging("Address3_AddressTypeCode");
				SetAttributeValue("address3_addresstypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("Address3_AddressTypeCode");
			}
		}
		
		/// <summary>
		/// Type the city for the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_city")]
		public string Address3_City
		{
			get
			{
				return GetAttributeValue<string>("address3_city");
			}
			set
			{
				OnPropertyChanging("Address3_City");
				SetAttributeValue("address3_city", value);
				OnPropertyChanged("Address3_City");
			}
		}
		
		/// <summary>
		/// Shows the complete third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_composite")]
		public string Address3_Composite
		{
			get
			{
				return GetAttributeValue<string>("address3_composite");
			}
		}
		
		/// <summary>
		/// the country or region for the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_country")]
		public string Address3_Country
		{
			get
			{
				return GetAttributeValue<string>("address3_country");
			}
			set
			{
				OnPropertyChanging("Address3_Country");
				SetAttributeValue("address3_country", value);
				OnPropertyChanged("Address3_Country");
			}
		}
		
		/// <summary>
		/// Type the county for the third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_county")]
		public string Address3_County
		{
			get
			{
				return GetAttributeValue<string>("address3_county");
			}
			set
			{
				OnPropertyChanging("Address3_County");
				SetAttributeValue("address3_county", value);
				OnPropertyChanged("Address3_County");
			}
		}
		
		/// <summary>
		/// Type the fax number associated with the third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_fax")]
		public string Address3_Fax
		{
			get
			{
				return GetAttributeValue<string>("address3_fax");
			}
			set
			{
				OnPropertyChanging("Address3_Fax");
				SetAttributeValue("address3_fax", value);
				OnPropertyChanged("Address3_Fax");
			}
		}
		
		/// <summary>
		/// Select the freight terms for the third address to make sure shipping orders are processed correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_freighttermscode")]
		public virtual contact_address3_freighttermscode? Address3_FreightTermsCode
		{
			get
			{
				return ((contact_address3_freighttermscode?)(EntityOptionSetEnum.GetEnum(this, "address3_freighttermscode")));
			}
			set
			{
				OnPropertyChanging("Address3_FreightTermsCode");
				SetAttributeValue("address3_freighttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("Address3_FreightTermsCode");
			}
		}
		
		/// <summary>
		/// Type the latitude value for the third address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_latitude")]
		public Nullable<double> Address3_Latitude
		{
			get
			{
				return GetAttributeValue<Nullable<double>>("address3_latitude");
			}
			set
			{
				OnPropertyChanging("Address3_Latitude");
				SetAttributeValue("address3_latitude", value);
				OnPropertyChanged("Address3_Latitude");
			}
		}
		
		/// <summary>
		/// the first line of the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_line1")]
		public string Address3_Line1
		{
			get
			{
				return GetAttributeValue<string>("address3_line1");
			}
			set
			{
				OnPropertyChanging("Address3_Line1");
				SetAttributeValue("address3_line1", value);
				OnPropertyChanged("Address3_Line1");
			}
		}
		
		/// <summary>
		/// the second line of the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_line2")]
		public string Address3_Line2
		{
			get
			{
				return GetAttributeValue<string>("address3_line2");
			}
			set
			{
				OnPropertyChanging("Address3_Line2");
				SetAttributeValue("address3_line2", value);
				OnPropertyChanged("Address3_Line2");
			}
		}
		
		/// <summary>
		/// the third line of the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_line3")]
		public string Address3_Line3
		{
			get
			{
				return GetAttributeValue<string>("address3_line3");
			}
			set
			{
				OnPropertyChanging("Address3_Line3");
				SetAttributeValue("address3_line3", value);
				OnPropertyChanged("Address3_Line3");
			}
		}
		
		/// <summary>
		/// Type the longitude value for the third address for use in mapping and other applications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_longitude")]
		public Nullable<double> Address3_Longitude
		{
			get
			{
				return GetAttributeValue<Nullable<double>>("address3_longitude");
			}
			set
			{
				OnPropertyChanging("Address3_Longitude");
				SetAttributeValue("address3_longitude", value);
				OnPropertyChanged("Address3_Longitude");
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the third address, such as Corporate Headquarters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_name")]
		public string Address3_Name
		{
			get
			{
				return GetAttributeValue<string>("address3_name");
			}
			set
			{
				OnPropertyChanging("Address3_Name");
				SetAttributeValue("address3_name", value);
				OnPropertyChanged("Address3_Name");
			}
		}
		
		/// <summary>
		/// the ZIP Code or postal code for the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_postalcode")]
		public string Address3_PostalCode
		{
			get
			{
				return GetAttributeValue<string>("address3_postalcode");
			}
			set
			{
				OnPropertyChanging("Address3_PostalCode");
				SetAttributeValue("address3_postalcode", value);
				OnPropertyChanged("Address3_PostalCode");
			}
		}
		
		/// <summary>
		/// the post office box number of the 3rd address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_postofficebox")]
		public string Address3_PostOfficeBox
		{
			get
			{
				return GetAttributeValue<string>("address3_postofficebox");
			}
			set
			{
				OnPropertyChanging("Address3_PostOfficeBox");
				SetAttributeValue("address3_postofficebox", value);
				OnPropertyChanged("Address3_PostOfficeBox");
			}
		}
		
		/// <summary>
		/// Type the name of the main contact at the account's third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_primarycontactname")]
		public string Address3_PrimaryContactName
		{
			get
			{
				return GetAttributeValue<string>("address3_primarycontactname");
			}
			set
			{
				OnPropertyChanging("Address3_PrimaryContactName");
				SetAttributeValue("address3_primarycontactname", value);
				OnPropertyChanged("Address3_PrimaryContactName");
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_shippingmethodcode")]
		public virtual contact_address3_shippingmethodcode? Address3_ShippingMethodCode
		{
			get
			{
				return ((contact_address3_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "address3_shippingmethodcode")));
			}
			set
			{
				OnPropertyChanging("Address3_ShippingMethodCode");
				SetAttributeValue("address3_shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("Address3_ShippingMethodCode");
			}
		}
		
		/// <summary>
		/// the state or province of the third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_stateorprovince")]
		public string Address3_StateOrProvince
		{
			get
			{
				return GetAttributeValue<string>("address3_stateorprovince");
			}
			set
			{
				OnPropertyChanging("Address3_StateOrProvince");
				SetAttributeValue("address3_stateorprovince", value);
				OnPropertyChanged("Address3_StateOrProvince");
			}
		}
		
		/// <summary>
		/// Type the main phone number associated with the third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_telephone1")]
		public string Address3_Telephone1
		{
			get
			{
				return GetAttributeValue<string>("address3_telephone1");
			}
			set
			{
				OnPropertyChanging("Address3_Telephone1");
				SetAttributeValue("address3_telephone1", value);
				OnPropertyChanged("Address3_Telephone1");
			}
		}
		
		/// <summary>
		/// Type a second phone number associated with the third address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_telephone2")]
		public string Address3_Telephone2
		{
			get
			{
				return GetAttributeValue<string>("address3_telephone2");
			}
			set
			{
				OnPropertyChanging("Address3_Telephone2");
				SetAttributeValue("address3_telephone2", value);
				OnPropertyChanged("Address3_Telephone2");
			}
		}
		
		/// <summary>
		/// Type a third phone number associated with the primary address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_telephone3")]
		public string Address3_Telephone3
		{
			get
			{
				return GetAttributeValue<string>("address3_telephone3");
			}
			set
			{
				OnPropertyChanging("Address3_Telephone3");
				SetAttributeValue("address3_telephone3", value);
				OnPropertyChanged("Address3_Telephone3");
			}
		}
		
		/// <summary>
		/// Type the UPS zone of the third address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_upszone")]
		public string Address3_UPSZone
		{
			get
			{
				return GetAttributeValue<string>("address3_upszone");
			}
			set
			{
				OnPropertyChanging("Address3_UPSZone");
				SetAttributeValue("address3_upszone", value);
				OnPropertyChanged("Address3_UPSZone");
			}
		}
		
		/// <summary>
		/// Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("address3_utcoffset")]
		public Nullable<int> Address3_UTCOffset
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("address3_utcoffset");
			}
			set
			{
				OnPropertyChanging("Address3_UTCOffset");
				SetAttributeValue("address3_utcoffset", value);
				OnPropertyChanged("Address3_UTCOffset");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_confirmremovepassword")]
		public Nullable<bool> adx_ConfirmRemovePassword
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("adx_confirmremovepassword");
			}
			set
			{
				OnPropertyChanging("adx_ConfirmRemovePassword");
				SetAttributeValue("adx_confirmremovepassword", value);
				OnPropertyChanged("adx_ConfirmRemovePassword");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyipaddress")]
		public string Adx_CreatedByIPAddress
		{
			get
			{
				return GetAttributeValue<string>("adx_createdbyipaddress");
			}
			set
			{
				OnPropertyChanging("Adx_CreatedByIPAddress");
				SetAttributeValue("adx_createdbyipaddress", value);
				OnPropertyChanged("Adx_CreatedByIPAddress");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_createdbyusername")]
		public string Adx_CreatedByUsername
		{
			get
			{
				return GetAttributeValue<string>("adx_createdbyusername");
			}
			set
			{
				OnPropertyChanging("Adx_CreatedByUsername");
				SetAttributeValue("adx_createdbyusername", value);
				OnPropertyChanged("Adx_CreatedByUsername");
			}
		}
		
		/// <summary>
		/// Shows the current count of failed password attempts for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_accessfailedcount")]
		public Nullable<int> adx_identity_accessfailedcount
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("adx_identity_accessfailedcount");
			}
			set
			{
				OnPropertyChanging("adx_identity_accessfailedcount");
				SetAttributeValue("adx_identity_accessfailedcount", value);
				OnPropertyChanged("adx_identity_accessfailedcount");
			}
		}
		
		/// <summary>
		/// Determines if the email is confirmed by the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_emailaddress1confirmed")]
		public Nullable<bool> adx_identity_emailaddress1confirmed
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("adx_identity_emailaddress1confirmed");
			}
			set
			{
				OnPropertyChanging("adx_identity_emailaddress1confirmed");
				SetAttributeValue("adx_identity_emailaddress1confirmed", value);
				OnPropertyChanged("adx_identity_emailaddress1confirmed");
			}
		}
		
		/// <summary>
		/// Indicates the last date and time the user successfully signed in to a portal.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lastsuccessfullogin")]
		public Nullable<DateTime> adx_identity_lastsuccessfullogin
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("adx_identity_lastsuccessfullogin");
			}
			set
			{
				OnPropertyChanging("adx_identity_lastsuccessfullogin");
				SetAttributeValue("adx_identity_lastsuccessfullogin", value);
				OnPropertyChanged("adx_identity_lastsuccessfullogin");
			}
		}
		
		/// <summary>
		/// Indicates that the contact can no longer sign in to the portal using the local account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_locallogindisabled")]
		public Nullable<bool> adx_identity_locallogindisabled
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("adx_identity_locallogindisabled");
			}
			set
			{
				OnPropertyChanging("adx_identity_locallogindisabled");
				SetAttributeValue("adx_identity_locallogindisabled", value);
				OnPropertyChanged("adx_identity_locallogindisabled");
			}
		}
		
		/// <summary>
		/// Determines if this contact will track failed access attempts and become locked after too many failed attempts. To prevent the contact from becoming locked, you can disable this setting.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lockoutenabled")]
		public Nullable<bool> adx_identity_lockoutenabled
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("adx_identity_lockoutenabled");
			}
			set
			{
				OnPropertyChanging("adx_identity_lockoutenabled");
				SetAttributeValue("adx_identity_lockoutenabled", value);
				OnPropertyChanged("adx_identity_lockoutenabled");
			}
		}
		
		/// <summary>
		/// Shows the moment in time when the locked contact becomes unlocked again.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_lockoutenddate")]
		public Nullable<DateTime> adx_identity_lockoutenddate
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("adx_identity_lockoutenddate");
			}
			set
			{
				OnPropertyChanging("adx_identity_lockoutenddate");
				SetAttributeValue("adx_identity_lockoutenddate", value);
				OnPropertyChanged("adx_identity_lockoutenddate");
			}
		}
		
		/// <summary>
		/// Determines if web authentication is enabled for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_logonenabled")]
		public Nullable<bool> adx_identity_logonenabled
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("adx_identity_logonenabled");
			}
			set
			{
				OnPropertyChanging("adx_identity_logonenabled");
				SetAttributeValue("adx_identity_logonenabled", value);
				OnPropertyChanged("adx_identity_logonenabled");
			}
		}
		
		/// <summary>
		/// Determines if the phone number is confirmed by the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_mobilephoneconfirmed")]
		public Nullable<bool> adx_identity_mobilephoneconfirmed
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("adx_identity_mobilephoneconfirmed");
			}
			set
			{
				OnPropertyChanging("adx_identity_mobilephoneconfirmed");
				SetAttributeValue("adx_identity_mobilephoneconfirmed", value);
				OnPropertyChanged("adx_identity_mobilephoneconfirmed");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_newpassword")]
		public string adx_identity_newpassword
		{
			get
			{
				return GetAttributeValue<string>("adx_identity_newpassword");
			}
			set
			{
				OnPropertyChanging("adx_identity_newpassword");
				SetAttributeValue("adx_identity_newpassword", value);
				OnPropertyChanged("adx_identity_newpassword");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_passwordhash")]
		public string adx_identity_passwordhash
		{
			get
			{
				return GetAttributeValue<string>("adx_identity_passwordhash");
			}
			set
			{
				OnPropertyChanging("adx_identity_passwordhash");
				SetAttributeValue("adx_identity_passwordhash", value);
				OnPropertyChanged("adx_identity_passwordhash");
			}
		}
		
		/// <summary>
		/// A token used to manage the web authentication session.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_securitystamp")]
		public string adx_identity_securitystamp
		{
			get
			{
				return GetAttributeValue<string>("adx_identity_securitystamp");
			}
			set
			{
				OnPropertyChanging("adx_identity_securitystamp");
				SetAttributeValue("adx_identity_securitystamp", value);
				OnPropertyChanged("adx_identity_securitystamp");
			}
		}
		
		/// <summary>
		/// Determines if two-factor authentication is enabled for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_twofactorenabled")]
		public Nullable<bool> adx_identity_twofactorenabled
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("adx_identity_twofactorenabled");
			}
			set
			{
				OnPropertyChanging("adx_identity_twofactorenabled");
				SetAttributeValue("adx_identity_twofactorenabled", value);
				OnPropertyChanged("adx_identity_twofactorenabled");
			}
		}
		
		/// <summary>
		/// Shows the user identity for local web authentication.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_identity_username")]
		public string adx_identity_username
		{
			get
			{
				return GetAttributeValue<string>("adx_identity_username");
			}
			set
			{
				OnPropertyChanging("adx_identity_username");
				SetAttributeValue("adx_identity_username", value);
				OnPropertyChanged("adx_identity_username");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyipaddress")]
		public string Adx_ModifiedByIPAddress
		{
			get
			{
				return GetAttributeValue<string>("adx_modifiedbyipaddress");
			}
			set
			{
				OnPropertyChanging("Adx_ModifiedByIPAddress");
				SetAttributeValue("adx_modifiedbyipaddress", value);
				OnPropertyChanged("Adx_ModifiedByIPAddress");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_modifiedbyusername")]
		public string Adx_ModifiedByUsername
		{
			get
			{
				return GetAttributeValue<string>("adx_modifiedbyusername");
			}
			set
			{
				OnPropertyChanging("Adx_ModifiedByUsername");
				SetAttributeValue("adx_modifiedbyusername", value);
				OnPropertyChanged("Adx_ModifiedByUsername");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_organizationname")]
		public string Adx_OrganizationName
		{
			get
			{
				return GetAttributeValue<string>("adx_organizationname");
			}
			set
			{
				OnPropertyChanging("Adx_OrganizationName");
				SetAttributeValue("adx_organizationname", value);
				OnPropertyChanged("Adx_OrganizationName");
			}
		}
		
		/// <summary>
		/// User’s preferred portal LCID
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_preferredlcid")]
		public Nullable<int> adx_preferredlcid
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("adx_preferredlcid");
			}
			set
			{
				OnPropertyChanging("adx_preferredlcid");
				SetAttributeValue("adx_preferredlcid", value);
				OnPropertyChanged("adx_preferredlcid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealert")]
		public Nullable<bool> adx_profilealert
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("adx_profilealert");
			}
			set
			{
				OnPropertyChanging("adx_profilealert");
				SetAttributeValue("adx_profilealert", value);
				OnPropertyChanged("adx_profilealert");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealertdate")]
		public Nullable<DateTime> adx_profilealertdate
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("adx_profilealertdate");
			}
			set
			{
				OnPropertyChanging("adx_profilealertdate");
				SetAttributeValue("adx_profilealertdate", value);
				OnPropertyChanged("adx_profilealertdate");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilealertinstructions")]
		public string adx_profilealertinstructions
		{
			get
			{
				return GetAttributeValue<string>("adx_profilealertinstructions");
			}
			set
			{
				OnPropertyChanging("adx_profilealertinstructions");
				SetAttributeValue("adx_profilealertinstructions", value);
				OnPropertyChanged("adx_profilealertinstructions");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profileisanonymous")]
		public Nullable<bool> Adx_ProfileIsAnonymous
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("adx_profileisanonymous");
			}
			set
			{
				OnPropertyChanging("Adx_ProfileIsAnonymous");
				SetAttributeValue("adx_profileisanonymous", value);
				OnPropertyChanged("Adx_ProfileIsAnonymous");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilelastactivity")]
		public Nullable<DateTime> Adx_ProfileLastActivity
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("adx_profilelastactivity");
			}
			set
			{
				OnPropertyChanging("Adx_ProfileLastActivity");
				SetAttributeValue("adx_profilelastactivity", value);
				OnPropertyChanged("Adx_ProfileLastActivity");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_profilemodifiedon")]
		public Nullable<DateTime> adx_profilemodifiedon
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("adx_profilemodifiedon");
			}
			set
			{
				OnPropertyChanging("adx_profilemodifiedon");
				SetAttributeValue("adx_profilemodifiedon", value);
				OnPropertyChanged("adx_profilemodifiedon");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_publicprofilecopy")]
		public string adx_PublicProfileCopy
		{
			get
			{
				return GetAttributeValue<string>("adx_publicprofilecopy");
			}
			set
			{
				OnPropertyChanging("adx_PublicProfileCopy");
				SetAttributeValue("adx_publicprofilecopy", value);
				OnPropertyChanged("adx_PublicProfileCopy");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adx_timezone")]
		public Nullable<int> Adx_TimeZone
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("adx_timezone");
			}
			set
			{
				OnPropertyChanging("Adx_TimeZone");
				SetAttributeValue("adx_timezone", value);
				OnPropertyChanged("Adx_TimeZone");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30")]
		public Microsoft.Xrm.Sdk.Money Aging30
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30");
			}
		}
		
		/// <summary>
		/// Shows the Aging 30 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging30_base")]
		public Microsoft.Xrm.Sdk.Money Aging30_Base
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging30_base");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60")]
		public Microsoft.Xrm.Sdk.Money Aging60
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60");
			}
		}
		
		/// <summary>
		/// Shows the Aging 60 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging60_base")]
		public Microsoft.Xrm.Sdk.Money Aging60_Base
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging60_base");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90")]
		public Microsoft.Xrm.Sdk.Money Aging90
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90");
			}
		}
		
		/// <summary>
		/// Shows the Aging 90 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aging90_base")]
		public Microsoft.Xrm.Sdk.Money Aging90_Base
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.Money>("aging90_base");
			}
		}
		
		/// <summary>
		/// Enter the date of the contact's wedding or service anniversary for use in customer gift programs or other communications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("anniversary")]
		public Nullable<DateTime> Anniversary
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("anniversary");
			}
			set
			{
				OnPropertyChanging("Anniversary");
				SetAttributeValue("anniversary", value);
				OnPropertyChanged("Anniversary");
			}
		}
		
		/// <summary>
		/// Type the contact's annual income for use in profiling and financial analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("annualincome")]
		public Microsoft.Xrm.Sdk.Money AnnualIncome
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.Money>("annualincome");
			}
			set
			{
				OnPropertyChanging("AnnualIncome");
				SetAttributeValue("annualincome", value);
				OnPropertyChanged("AnnualIncome");
			}
		}
		
		/// <summary>
		/// Shows the Annual Income field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("annualincome_base")]
		public Microsoft.Xrm.Sdk.Money AnnualIncome_Base
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.Money>("annualincome_base");
			}
		}
		
		/// <summary>
		/// Type the name of the contact's assistant.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("assistantname")]
		public string AssistantName
		{
			get
			{
				return GetAttributeValue<string>("assistantname");
			}
			set
			{
				OnPropertyChanging("AssistantName");
				SetAttributeValue("assistantname", value);
				OnPropertyChanged("AssistantName");
			}
		}
		
		/// <summary>
		/// Type the phone number for the contact's assistant.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("assistantphone")]
		public string AssistantPhone
		{
			get
			{
				return GetAttributeValue<string>("assistantphone");
			}
			set
			{
				OnPropertyChanging("AssistantPhone");
				SetAttributeValue("assistantphone", value);
				OnPropertyChanged("AssistantPhone");
			}
		}
		
		/// <summary>
		/// Enter the contact's birthday for use in customer gift programs or other communications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("birthdate")]
		public Nullable<DateTime> BirthDate
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("birthdate");
			}
			set
			{
				OnPropertyChanging("BirthDate");
				SetAttributeValue("birthdate", value);
				OnPropertyChanged("BirthDate");
			}
		}
		
		/// <summary>
		/// Type a second business phone number for this contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("business2")]
		public string Business2
		{
			get
			{
				return GetAttributeValue<string>("business2");
			}
			set
			{
				OnPropertyChanging("Business2");
				SetAttributeValue("business2", value);
				OnPropertyChanged("Business2");
			}
		}
		
		/// <summary>
		/// Stores Image of the Business Card
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesscard")]
		public string BusinessCard
		{
			get
			{
				return GetAttributeValue<string>("businesscard");
			}
			set
			{
				OnPropertyChanging("BusinessCard");
				SetAttributeValue("businesscard", value);
				OnPropertyChanged("BusinessCard");
			}
		}
		
		/// <summary>
		/// Stores Business Card Control Properties.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businesscardattributes")]
		public string BusinessCardAttributes
		{
			get
			{
				return GetAttributeValue<string>("businesscardattributes");
			}
			set
			{
				OnPropertyChanging("BusinessCardAttributes");
				SetAttributeValue("businesscardattributes", value);
				OnPropertyChanged("BusinessCardAttributes");
			}
		}
		
		/// <summary>
		/// Type a callback phone number for this contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("callback")]
		public string Callback
		{
			get
			{
				return GetAttributeValue<string>("callback");
			}
			set
			{
				OnPropertyChanging("Callback");
				SetAttributeValue("callback", value);
				OnPropertyChanged("Callback");
			}
		}
		
		/// <summary>
		/// Type the names of the contact's children for reference in communications and client programs.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("childrensnames")]
		public string ChildrensNames
		{
			get
			{
				return GetAttributeValue<string>("childrensnames");
			}
			set
			{
				OnPropertyChanging("ChildrensNames");
				SetAttributeValue("childrensnames", value);
				OnPropertyChanged("ChildrensNames");
			}
		}
		
		/// <summary>
		/// Type the company phone of the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("company")]
		public string Company
		{
			get
			{
				return GetAttributeValue<string>("company");
			}
			set
			{
				OnPropertyChanging("Company");
				SetAttributeValue("company", value);
				OnPropertyChanged("Company");
			}
		}
		
		/// <summary>
		/// Unique identifier of the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public Nullable<Guid> ContactId
		{
			get
			{
				return GetAttributeValue<Nullable<Guid>>("contactid");
			}
			set
			{
				OnPropertyChanging("ContactId");
				SetAttributeValue("contactid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = Guid.Empty;
				}
				OnPropertyChanged("ContactId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public override Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				ContactId = value;
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the external party who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedByExternalParty
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdbyexternalparty");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public Nullable<DateTime> CreatedOn
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		/// <summary>
		/// Type the credit limit of the contact for reference when you address invoice and accounting issues with the customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit")]
		public Microsoft.Xrm.Sdk.Money CreditLimit
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit");
			}
			set
			{
				OnPropertyChanging("CreditLimit");
				SetAttributeValue("creditlimit", value);
				OnPropertyChanged("CreditLimit");
			}
		}
		
		/// <summary>
		/// Shows the Credit Limit field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditlimit_base")]
		public Microsoft.Xrm.Sdk.Money CreditLimit_Base
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.Money>("creditlimit_base");
			}
		}
		
		/// <summary>
		/// Select whether the contact is on a credit hold, for reference when addressing invoice and accounting issues.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("creditonhold")]
		public Nullable<bool> CreditOnHold
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("creditonhold");
			}
			set
			{
				OnPropertyChanging("CreditOnHold");
				SetAttributeValue("creditonhold", value);
				OnPropertyChanged("CreditOnHold");
			}
		}
		
		/// <summary>
		/// Select the size of the contact's company for segmentation and reporting purposes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersizecode")]
		public virtual contact_customersizecode? CustomerSizeCode
		{
			get
			{
				return ((contact_customersizecode?)(EntityOptionSetEnum.GetEnum(this, "customersizecode")));
			}
			set
			{
				OnPropertyChanging("CustomerSizeCode");
				SetAttributeValue("customersizecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("CustomerSizeCode");
			}
		}
		
		/// <summary>
		/// Select the category that best describes the relationship between the contact and your organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customertypecode")]
		public virtual contact_customertypecode? CustomerTypeCode
		{
			get
			{
				return ((contact_customertypecode?)(EntityOptionSetEnum.GetEnum(this, "customertypecode")));
			}
			set
			{
				OnPropertyChanging("CustomerTypeCode");
				SetAttributeValue("customertypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("CustomerTypeCode");
			}
		}
		
		/// <summary>
		/// Choose the default price list associated with the contact to make sure the correct product prices for this customer are applied in sales opportunities, quotes, and orders.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultpricelevelid")]
		public Microsoft.Xrm.Sdk.EntityReference DefaultPriceLevelId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("defaultpricelevelid");
			}
			set
			{
				OnPropertyChanging("DefaultPriceLevelId");
				SetAttributeValue("defaultpricelevelid", value);
				OnPropertyChanged("DefaultPriceLevelId");
			}
		}
		
		/// <summary>
		/// Type the department or business unit where the contact works in the parent company or business.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("department")]
		public string Department
		{
			get
			{
				return GetAttributeValue<string>("department");
			}
			set
			{
				OnPropertyChanging("Department");
				SetAttributeValue("department", value);
				OnPropertyChanged("Department");
			}
		}
		
		/// <summary>
		/// Type additional information to describe the contact, such as an excerpt from the company's website.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return GetAttributeValue<string>("description");
			}
			set
			{
				OnPropertyChanging("Description");
				SetAttributeValue("description", value);
				OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Select whether the contact accepts bulk email sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkemail")]
		public Nullable<bool> DoNotBulkEMail
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("donotbulkemail");
			}
			set
			{
				OnPropertyChanging("DoNotBulkEMail");
				SetAttributeValue("donotbulkemail", value);
				OnPropertyChanged("DoNotBulkEMail");
			}
		}
		
		/// <summary>
		/// Select whether the contact accepts bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the letters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotbulkpostalmail")]
		public Nullable<bool> DoNotBulkPostalMail
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("donotbulkpostalmail");
			}
			set
			{
				OnPropertyChanging("DoNotBulkPostalMail");
				SetAttributeValue("donotbulkpostalmail", value);
				OnPropertyChanged("DoNotBulkPostalMail");
			}
		}
		
		/// <summary>
		/// Select whether the contact allows direct email sent from Microsoft Dynamics 365. If Do Not Allow is selected, Microsoft Dynamics 365 will not send the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotemail")]
		public Nullable<bool> DoNotEMail
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("donotemail");
			}
			set
			{
				OnPropertyChanging("DoNotEMail");
				SetAttributeValue("donotemail", value);
				OnPropertyChanged("DoNotEMail");
			}
		}
		
		/// <summary>
		/// Select whether the contact allows faxes. If Do Not Allow is selected, the contact will be excluded from any fax activities distributed in marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotfax")]
		public Nullable<bool> DoNotFax
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("donotfax");
			}
			set
			{
				OnPropertyChanging("DoNotFax");
				SetAttributeValue("donotfax", value);
				OnPropertyChanged("DoNotFax");
			}
		}
		
		/// <summary>
		/// Select whether the contact accepts phone calls. If Do Not Allow is selected, the contact will be excluded from any phone call activities distributed in marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotphone")]
		public Nullable<bool> DoNotPhone
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("donotphone");
			}
			set
			{
				OnPropertyChanging("DoNotPhone");
				SetAttributeValue("donotphone", value);
				OnPropertyChanged("DoNotPhone");
			}
		}
		
		/// <summary>
		/// Select whether the contact allows direct mail. If Do Not Allow is selected, the contact will be excluded from letter activities distributed in marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotpostalmail")]
		public Nullable<bool> DoNotPostalMail
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("donotpostalmail");
			}
			set
			{
				OnPropertyChanging("DoNotPostalMail");
				SetAttributeValue("donotpostalmail", value);
				OnPropertyChanged("DoNotPostalMail");
			}
		}
		
		/// <summary>
		/// Select whether the contact accepts marketing materials, such as brochures or catalogs. Contacts that opt out can be excluded from marketing initiatives.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendmm")]
		public Nullable<bool> DoNotSendMM
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("donotsendmm");
			}
			set
			{
				OnPropertyChanging("DoNotSendMM");
				SetAttributeValue("donotsendmm", value);
				OnPropertyChanged("DoNotSendMM");
			}
		}
		
		/// <summary>
		/// Select the contact's highest level of education for use in segmentation and analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("educationcode")]
		public virtual contact_educationcode? EducationCode
		{
			get
			{
				return ((contact_educationcode?)(EntityOptionSetEnum.GetEnum(this, "educationcode")));
			}
			set
			{
				OnPropertyChanging("EducationCode");
				SetAttributeValue("educationcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("EducationCode");
			}
		}
		
		/// <summary>
		/// Type the primary email address for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress1")]
		public string EMailAddress1
		{
			get
			{
				return GetAttributeValue<string>("emailaddress1");
			}
			set
			{
				OnPropertyChanging("EMailAddress1");
				SetAttributeValue("emailaddress1", value);
				OnPropertyChanged("EMailAddress1");
			}
		}
		
		/// <summary>
		/// Type the secondary email address for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress2")]
		public string EMailAddress2
		{
			get
			{
				return GetAttributeValue<string>("emailaddress2");
			}
			set
			{
				OnPropertyChanging("EMailAddress2");
				SetAttributeValue("emailaddress2", value);
				OnPropertyChanged("EMailAddress2");
			}
		}
		
		/// <summary>
		/// Type an alternate email address for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress3")]
		public string EMailAddress3
		{
			get
			{
				return GetAttributeValue<string>("emailaddress3");
			}
			set
			{
				OnPropertyChanging("EMailAddress3");
				SetAttributeValue("emailaddress3", value);
				OnPropertyChanged("EMailAddress3");
			}
		}
		
		/// <summary>
		/// Type the employee ID or number for the contact for reference in orders, service cases, or other communications with the contact's organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("employeeid")]
		public string EmployeeId
		{
			get
			{
				return GetAttributeValue<string>("employeeid");
			}
			set
			{
				OnPropertyChanging("EmployeeId");
				SetAttributeValue("employeeid", value);
				OnPropertyChanged("EmployeeId");
			}
		}
		
		/// <summary>
		/// Shows the default image for the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			get
			{
				return GetAttributeValue<byte[]>("entityimage");
			}
			set
			{
				OnPropertyChanging("EntityImage");
				SetAttributeValue("entityimage", value);
				OnPropertyChanged("EntityImage");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public Nullable<long> EntityImage_Timestamp
		{
			get
			{
				return GetAttributeValue<Nullable<long>>("entityimage_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			get
			{
				return GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public Nullable<Guid> EntityImageId
		{
			get
			{
				return GetAttributeValue<Nullable<Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public Nullable<decimal> ExchangeRate
		{
			get
			{
				return GetAttributeValue<Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Identifier for an external user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externaluseridentifier")]
		public string ExternalUserIdentifier
		{
			get
			{
				return GetAttributeValue<string>("externaluseridentifier");
			}
			set
			{
				OnPropertyChanging("ExternalUserIdentifier");
				SetAttributeValue("externaluseridentifier", value);
				OnPropertyChanged("ExternalUserIdentifier");
			}
		}
		
		/// <summary>
		/// Select the marital status of the contact for reference in follow-up phone calls and other communications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("familystatuscode")]
		public virtual contact_familystatuscode? FamilyStatusCode
		{
			get
			{
				return ((contact_familystatuscode?)(EntityOptionSetEnum.GetEnum(this, "familystatuscode")));
			}
			set
			{
				OnPropertyChanging("FamilyStatusCode");
				SetAttributeValue("familystatuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("FamilyStatusCode");
			}
		}
		
		/// <summary>
		/// Type the fax number for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fax")]
		public string Fax
		{
			get
			{
				return GetAttributeValue<string>("fax");
			}
			set
			{
				OnPropertyChanging("Fax");
				SetAttributeValue("fax", value);
				OnPropertyChanged("Fax");
			}
		}
		
		/// <summary>
		/// Type the contact's first name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstname")]
		public string FirstName
		{
			get
			{
				return GetAttributeValue<string>("firstname");
			}
			set
			{
				OnPropertyChanging("FirstName");
				SetAttributeValue("firstname", value);
				OnPropertyChanged("FirstName");
			}
		}
		
		/// <summary>
		/// Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemail")]
		public Nullable<bool> FollowEmail
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("followemail");
			}
			set
			{
				OnPropertyChanging("FollowEmail");
				SetAttributeValue("followemail", value);
				OnPropertyChanged("FollowEmail");
			}
		}
		
		/// <summary>
		/// Type the URL for the contact's FTP site to enable users to access data and share documents.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ftpsiteurl")]
		public string FtpSiteUrl
		{
			get
			{
				return GetAttributeValue<string>("ftpsiteurl");
			}
			set
			{
				OnPropertyChanging("FtpSiteUrl");
				SetAttributeValue("ftpsiteurl", value);
				OnPropertyChanged("FtpSiteUrl");
			}
		}
		
		/// <summary>
		/// Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fullname")]
		public string FullName
		{
			get
			{
				return GetAttributeValue<string>("fullname");
			}
		}
		
		/// <summary>
		/// Select the contact's gender to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("gendercode")]
		public virtual contact_gendercode? GenderCode
		{
			get
			{
				return ((contact_gendercode?)(EntityOptionSetEnum.GetEnum(this, "gendercode")));
			}
			set
			{
				OnPropertyChanging("GenderCode");
				SetAttributeValue("gendercode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("GenderCode");
			}
		}
		
		/// <summary>
		/// Type the passport number or other government ID for the contact for use in documents or reports.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("governmentid")]
		public string GovernmentId
		{
			get
			{
				return GetAttributeValue<string>("governmentid");
			}
			set
			{
				OnPropertyChanging("GovernmentId");
				SetAttributeValue("governmentid", value);
				OnPropertyChanged("GovernmentId");
			}
		}
		
		/// <summary>
		/// Select whether the contact has any children for reference in follow-up phone calls and other communications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("haschildrencode")]
		public virtual contact_haschildrencode? HasChildrenCode
		{
			get
			{
				return ((contact_haschildrencode?)(EntityOptionSetEnum.GetEnum(this, "haschildrencode")));
			}
			set
			{
				OnPropertyChanging("HasChildrenCode");
				SetAttributeValue("haschildrencode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("HasChildrenCode");
			}
		}
		
		/// <summary>
		/// Type a second home phone number for this contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("home2")]
		public string Home2
		{
			get
			{
				return GetAttributeValue<string>("home2");
			}
			set
			{
				OnPropertyChanging("Home2");
				SetAttributeValue("home2", value);
				OnPropertyChanged("Home2");
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public Nullable<int> ImportSequenceNumber
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("importsequencenumber");
			}
			set
			{
				OnPropertyChanging("ImportSequenceNumber");
				SetAttributeValue("importsequencenumber", value);
				OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Select whether the contact exists in a separate accounting or other system, such as Microsoft Dynamics GP or another ERP database, for use in integration processes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbackofficecustomer")]
		public Nullable<bool> IsBackofficeCustomer
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("isbackofficecustomer");
			}
			set
			{
				OnPropertyChanging("IsBackofficeCustomer");
				SetAttributeValue("isbackofficecustomer", value);
				OnPropertyChanged("IsBackofficeCustomer");
			}
		}
		
		/// <summary>
		/// Type the job title of the contact to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("jobtitle")]
		public string JobTitle
		{
			get
			{
				return GetAttributeValue<string>("jobtitle");
			}
			set
			{
				OnPropertyChanging("JobTitle");
				SetAttributeValue("jobtitle", value);
				OnPropertyChanged("JobTitle");
			}
		}
		
		/// <summary>
		/// Type the contact's last name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastname")]
		public string LastName
		{
			get
			{
				return GetAttributeValue<string>("lastname");
			}
			set
			{
				OnPropertyChanging("LastName");
				SetAttributeValue("lastname", value);
				OnPropertyChanged("LastName");
			}
		}
		
		/// <summary>
		/// Contains the date and time stamp of the last on hold time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public Nullable<DateTime> LastOnHoldTime
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("lastonholdtime");
			}
			set
			{
				OnPropertyChanging("LastOnHoldTime");
				SetAttributeValue("lastonholdtime", value);
				OnPropertyChanged("LastOnHoldTime");
			}
		}
		
		/// <summary>
		/// Shows the date when the contact was last included in a marketing campaign or quick campaign.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastusedincampaign")]
		public Nullable<DateTime> LastUsedInCampaign
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("lastusedincampaign");
			}
			set
			{
				OnPropertyChanging("LastUsedInCampaign");
				SetAttributeValue("lastusedincampaign", value);
				OnPropertyChanged("LastUsedInCampaign");
			}
		}
		
		/// <summary>
		/// Select the primary marketing source that directed the contact to your organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("leadsourcecode")]
		public virtual contact_leadsourcecode? LeadSourceCode
		{
			get
			{
				return ((contact_leadsourcecode?)(EntityOptionSetEnum.GetEnum(this, "leadsourcecode")));
			}
			set
			{
				OnPropertyChanging("LeadSourceCode");
				SetAttributeValue("leadsourcecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("LeadSourceCode");
			}
		}
		
		/// <summary>
		/// Type the name of the contact's manager for use in escalating issues or other follow-up communications with the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managername")]
		public string ManagerName
		{
			get
			{
				return GetAttributeValue<string>("managername");
			}
			set
			{
				OnPropertyChanging("ManagerName");
				SetAttributeValue("managername", value);
				OnPropertyChanged("ManagerName");
			}
		}
		
		/// <summary>
		/// Type the phone number for the contact's manager.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managerphone")]
		public string ManagerPhone
		{
			get
			{
				return GetAttributeValue<string>("managerphone");
			}
			set
			{
				OnPropertyChanging("ManagerPhone");
				SetAttributeValue("managerphone", value);
				OnPropertyChanged("ManagerPhone");
			}
		}
		
		/// <summary>
		/// Whether is only for marketing
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("marketingonly")]
		public Nullable<bool> MarketingOnly
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("marketingonly");
			}
			set
			{
				OnPropertyChanging("MarketingOnly");
				SetAttributeValue("marketingonly", value);
				OnPropertyChanged("MarketingOnly");
			}
		}
		
		/// <summary>
		/// Unique identifier of the master contact for merge.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		public Microsoft.Xrm.Sdk.EntityReference MasterId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("masterid");
			}
		}
		
		/// <summary>
		/// Shows whether the account has been merged with a master contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("merged")]
		public Nullable<bool> Merged
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("merged");
			}
		}
		
		/// <summary>
		/// Type the contact's middle name or initial to make sure the contact is addressed correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("middlename")]
		public string MiddleName
		{
			get
			{
				return GetAttributeValue<string>("middlename");
			}
			set
			{
				OnPropertyChanging("MiddleName");
				SetAttributeValue("middlename", value);
				OnPropertyChanged("MiddleName");
			}
		}
		
		/// <summary>
		/// Type the mobile phone number for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mobilephone")]
		public string MobilePhone
		{
			get
			{
				return GetAttributeValue<string>("mobilephone");
			}
			set
			{
				OnPropertyChanging("MobilePhone");
				SetAttributeValue("mobilephone", value);
				OnPropertyChanged("MobilePhone");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the external party who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedByExternalParty
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedbyexternalparty");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public Nullable<DateTime> ModifiedOn
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// Unique identifier for Account associated with Contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
		public Microsoft.Xrm.Sdk.EntityReference msa_managingpartnerid
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msa_managingpartnerid");
			}
			set
			{
				OnPropertyChanging("msa_managingpartnerid");
				SetAttributeValue("msa_managingpartnerid", value);
				OnPropertyChanged("msa_managingpartnerid");
			}
		}
		
		/// <summary>
		/// Maps to contact KPI records
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_contactkpiid")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_contactkpiid
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_contactkpiid");
			}
			set
			{
				OnPropertyChanging("msdyn_contactkpiid");
				SetAttributeValue("msdyn_contactkpiid", value);
				OnPropertyChanged("msdyn_contactkpiid");
			}
		}
		
		/// <summary>
		/// Indicate buying influence using labels
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_decisioninfluencetag")]
		public virtual contact_msdyn_decisioninfluencetag? msdyn_decisioninfluencetag
		{
			get
			{
				return ((contact_msdyn_decisioninfluencetag?)(EntityOptionSetEnum.GetEnum(this, "msdyn_decisioninfluencetag")));
			}
			set
			{
				OnPropertyChanging("msdyn_decisioninfluencetag");
				SetAttributeValue("msdyn_decisioninfluencetag", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("msdyn_decisioninfluencetag");
			}
		}
		
		/// <summary>
		/// Indicates that the contact has opted out of web tracking.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_disablewebtracking")]
		public Nullable<bool> msdyn_disablewebtracking
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("msdyn_disablewebtracking");
			}
			set
			{
				OnPropertyChanging("msdyn_disablewebtracking");
				SetAttributeValue("msdyn_disablewebtracking", value);
				OnPropertyChanged("msdyn_disablewebtracking");
			}
		}
		
		/// <summary>
		/// Describes whether contact is opted out or not
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_gdproptout")]
		public Nullable<bool> msdyn_gdproptout
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("msdyn_gdproptout");
			}
			set
			{
				OnPropertyChanging("msdyn_gdproptout");
				SetAttributeValue("msdyn_gdproptout", value);
				OnPropertyChanged("msdyn_gdproptout");
			}
		}
		
		/// <summary>
		/// Describes if the contact is an assistant in org chart
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isassistantinorgchart")]
		public Nullable<bool> msdyn_isassistantinorgchart
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("msdyn_isassistantinorgchart");
			}
			set
			{
				OnPropertyChanging("msdyn_isassistantinorgchart");
				SetAttributeValue("msdyn_isassistantinorgchart", value);
				OnPropertyChanged("msdyn_isassistantinorgchart");
			}
		}
		
		/// <summary>
		/// Indicates that the contact is considered a minor in their jurisdiction.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isminor")]
		public Nullable<bool> msdyn_isminor
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("msdyn_isminor");
			}
			set
			{
				OnPropertyChanging("msdyn_isminor");
				SetAttributeValue("msdyn_isminor", value);
				OnPropertyChanged("msdyn_isminor");
			}
		}
		
		/// <summary>
		/// Indicates that the contact is considered a minor in their jurisdiction and has parental consent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_isminorwithparentalconsent")]
		public Nullable<bool> msdyn_isminorwithparentalconsent
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("msdyn_isminorwithparentalconsent");
			}
			set
			{
				OnPropertyChanging("msdyn_isminorwithparentalconsent");
				SetAttributeValue("msdyn_isminorwithparentalconsent", value);
				OnPropertyChanged("msdyn_isminorwithparentalconsent");
			}
		}
		
		/// <summary>
		/// Whether or not the contact belongs to the associated account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_orgchangestatus")]
		public virtual contact_msdyn_orgchangestatus? msdyn_orgchangestatus
		{
			get
			{
				return ((contact_msdyn_orgchangestatus?)(EntityOptionSetEnum.GetEnum(this, "msdyn_orgchangestatus")));
			}
			set
			{
				OnPropertyChanging("msdyn_orgchangestatus");
				SetAttributeValue("msdyn_orgchangestatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("msdyn_orgchangestatus");
			}
		}
		
		/// <summary>
		/// Indicates the date and time that the person agreed to the portal terms and conditions.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_portaltermsagreementdate")]
		public Nullable<DateTime> msdyn_portaltermsagreementdate
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("msdyn_portaltermsagreementdate");
			}
			set
			{
				OnPropertyChanging("msdyn_portaltermsagreementdate");
				SetAttributeValue("msdyn_portaltermsagreementdate", value);
				OnPropertyChanged("msdyn_portaltermsagreementdate");
			}
		}
		
		/// <summary>
		/// Indicates the primary time zone that the contact works on.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_primarytimezone")]
		public Nullable<int> msdyn_PrimaryTimeZone
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("msdyn_primarytimezone");
			}
			set
			{
				OnPropertyChanging("msdyn_PrimaryTimeZone");
				SetAttributeValue("msdyn_primarytimezone", value);
				OnPropertyChanged("msdyn_PrimaryTimeZone");
			}
		}
		
		/// <summary>
		/// User’s preferred portal language
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mspp_userpreferredlcid")]
		public virtual powerpagelanguages? mspp_userpreferredlcid
		{
			get
			{
				return ((powerpagelanguages?)(EntityOptionSetEnum.GetEnum(this, "mspp_userpreferredlcid")));
			}
			set
			{
				OnPropertyChanging("mspp_userpreferredlcid");
				SetAttributeValue("mspp_userpreferredlcid", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("mspp_userpreferredlcid");
			}
		}
		
		/// <summary>
		/// Type the contact's nickname.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nickname")]
		public string NickName
		{
			get
			{
				return GetAttributeValue<string>("nickname");
			}
			set
			{
				OnPropertyChanging("NickName");
				SetAttributeValue("nickname", value);
				OnPropertyChanged("NickName");
			}
		}
		
		/// <summary>
		/// Type the number of children the contact has for reference in follow-up phone calls and other communications.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberofchildren")]
		public Nullable<int> NumberOfChildren
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("numberofchildren");
			}
			set
			{
				OnPropertyChanging("NumberOfChildren");
				SetAttributeValue("numberofchildren", value);
				OnPropertyChanged("NumberOfChildren");
			}
		}
		
		/// <summary>
		/// Shows how long, in minutes, that the record was on hold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public Nullable<int> OnHoldTime
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Shows the lead that the contact was created if the contact was created by converting a lead in Microsoft Dynamics 365. This is used to relate the contact to the data on the originating lead for use in reporting and analytics.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingleadid")]
		public Microsoft.Xrm.Sdk.EntityReference OriginatingLeadId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("originatingleadid");
			}
			set
			{
				OnPropertyChanging("OriginatingLeadId");
				SetAttributeValue("originatingleadid", value);
				OnPropertyChanged("OriginatingLeadId");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public Nullable<DateTime> OverriddenCreatedOn
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("overriddencreatedon");
			}
			set
			{
				OnPropertyChanging("OverriddenCreatedOn");
				SetAttributeValue("overriddencreatedon", value);
				OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				OnPropertyChanging("OwnerId");
				SetAttributeValue("ownerid", value);
				OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Type the pager number for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pager")]
		public string Pager
		{
			get
			{
				return GetAttributeValue<string>("pager");
			}
			set
			{
				OnPropertyChanging("Pager");
				SetAttributeValue("pager", value);
				OnPropertyChanged("Pager");
			}
		}
		
		/// <summary>
		/// Unique identifier of the parent contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontactid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentContactId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcontactid");
			}
		}
		
		/// <summary>
		/// Select the parent account or parent contact for the contact to provide a quick link to additional details, such as financial information, activities, and opportunities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomerid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentCustomerId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcustomerid");
			}
			set
			{
				OnPropertyChanging("ParentCustomerId");
				SetAttributeValue("parentcustomerid", value);
				OnPropertyChanged("ParentCustomerId");
			}
		}
		
		/// <summary>
		/// Shows whether the contact participates in workflow rules.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("participatesinworkflow")]
		public Nullable<bool> ParticipatesInWorkflow
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("participatesinworkflow");
			}
			set
			{
				OnPropertyChanging("ParticipatesInWorkflow");
				SetAttributeValue("participatesinworkflow", value);
				OnPropertyChanged("ParticipatesInWorkflow");
			}
		}
		
		/// <summary>
		/// Select the payment terms to indicate when the customer needs to pay the total amount.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("paymenttermscode")]
		public virtual contact_paymenttermscode? PaymentTermsCode
		{
			get
			{
				return ((contact_paymenttermscode?)(EntityOptionSetEnum.GetEnum(this, "paymenttermscode")));
			}
			set
			{
				OnPropertyChanging("PaymentTermsCode");
				SetAttributeValue("paymenttermscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("PaymentTermsCode");
			}
		}
		
		/// <summary>
		/// Select the preferred day of the week for service appointments.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmentdaycode")]
		public virtual contact_preferredappointmentdaycode? PreferredAppointmentDayCode
		{
			get
			{
				return ((contact_preferredappointmentdaycode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmentdaycode")));
			}
			set
			{
				OnPropertyChanging("PreferredAppointmentDayCode");
				SetAttributeValue("preferredappointmentdaycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("PreferredAppointmentDayCode");
			}
		}
		
		/// <summary>
		/// Select the preferred time of day for service appointments.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredappointmenttimecode")]
		public virtual contact_preferredappointmenttimecode? PreferredAppointmentTimeCode
		{
			get
			{
				return ((contact_preferredappointmenttimecode?)(EntityOptionSetEnum.GetEnum(this, "preferredappointmenttimecode")));
			}
			set
			{
				OnPropertyChanging("PreferredAppointmentTimeCode");
				SetAttributeValue("preferredappointmenttimecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("PreferredAppointmentTimeCode");
			}
		}
		
		/// <summary>
		/// Select the preferred method of contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredcontactmethodcode")]
		public virtual contact_preferredcontactmethodcode? PreferredContactMethodCode
		{
			get
			{
				return ((contact_preferredcontactmethodcode?)(EntityOptionSetEnum.GetEnum(this, "preferredcontactmethodcode")));
			}
			set
			{
				OnPropertyChanging("PreferredContactMethodCode");
				SetAttributeValue("preferredcontactmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("PreferredContactMethodCode");
			}
		}
		
		/// <summary>
		/// Choose the contact's preferred service facility or equipment to make sure services are scheduled correctly for the customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredequipmentid")]
		public Microsoft.Xrm.Sdk.EntityReference PreferredEquipmentId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredequipmentid");
			}
			set
			{
				OnPropertyChanging("PreferredEquipmentId");
				SetAttributeValue("preferredequipmentid", value);
				OnPropertyChanged("PreferredEquipmentId");
			}
		}
		
		/// <summary>
		/// Choose the contact's preferred service to make sure services are scheduled correctly for the customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredserviceid")]
		public Microsoft.Xrm.Sdk.EntityReference PreferredServiceId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredserviceid");
			}
			set
			{
				OnPropertyChanging("PreferredServiceId");
				SetAttributeValue("preferredserviceid", value);
				OnPropertyChanged("PreferredServiceId");
			}
		}
		
		/// <summary>
		/// Choose the regular or preferred customer service representative for reference when scheduling service activities for the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredsystemuserid")]
		public Microsoft.Xrm.Sdk.EntityReference PreferredSystemUserId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("preferredsystemuserid");
			}
			set
			{
				OnPropertyChanging("PreferredSystemUserId");
				SetAttributeValue("preferredsystemuserid", value);
				OnPropertyChanged("PreferredSystemUserId");
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public Nullable<Guid> ProcessId
		{
			get
			{
				return GetAttributeValue<Nullable<Guid>>("processid");
			}
			set
			{
				OnPropertyChanging("ProcessId");
				SetAttributeValue("processid", value);
				OnPropertyChanged("ProcessId");
			}
		}
		
		/// <summary>
		/// Type the salutation of the contact to make sure the contact is addressed correctly in sales calls, email messages, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("salutation")]
		public string Salutation
		{
			get
			{
				return GetAttributeValue<string>("salutation");
			}
			set
			{
				OnPropertyChanging("Salutation");
				SetAttributeValue("salutation", value);
				OnPropertyChanged("Salutation");
			}
		}
		
		/// <summary>
		/// Select a shipping method for deliveries sent to this address.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("shippingmethodcode")]
		public virtual contact_shippingmethodcode? ShippingMethodCode
		{
			get
			{
				return ((contact_shippingmethodcode?)(EntityOptionSetEnum.GetEnum(this, "shippingmethodcode")));
			}
			set
			{
				OnPropertyChanging("ShippingMethodCode");
				SetAttributeValue("shippingmethodcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("ShippingMethodCode");
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the Contact record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			set
			{
				OnPropertyChanging("SLAId");
				SetAttributeValue("slaid", value);
				OnPropertyChanged("SLAId");
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this case. This field is for internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAInvokedId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		/// <summary>
		/// Type the name of the contact's spouse or partner for reference during calls, events, or other communications with the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("spousesname")]
		public string SpousesName
		{
			get
			{
				return GetAttributeValue<string>("spousesname");
			}
			set
			{
				OnPropertyChanging("SpousesName");
				SetAttributeValue("spousesname", value);
				OnPropertyChanged("SpousesName");
			}
		}
		
		/// <summary>
		/// Shows the ID of the stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public Nullable<Guid> StageId
		{
			get
			{
				return GetAttributeValue<Nullable<Guid>>("stageid");
			}
			set
			{
				OnPropertyChanging("StageId");
				SetAttributeValue("stageid", value);
				OnPropertyChanged("StageId");
			}
		}
		
		/// <summary>
		/// Shows whether the contact is active or inactive. Inactive contacts are read-only and can't be edited unless they are reactivated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual contact_statecode? StateCode
		{
			get
			{
				return ((contact_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				OnPropertyChanging("StateCode");
				SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the contact's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual contact_statuscode? StatusCode
		{
			get
			{
				return ((contact_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				OnPropertyChanging("StatusCode");
				SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subscriptionid")]
		public Nullable<Guid> SubscriptionId
		{
			get
			{
				return GetAttributeValue<Nullable<Guid>>("subscriptionid");
			}
			set
			{
				OnPropertyChanging("SubscriptionId");
				SetAttributeValue("subscriptionid", value);
				OnPropertyChanged("SubscriptionId");
			}
		}
		
		/// <summary>
		/// Type the suffix used in the contact's name, such as Jr. or Sr. to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("suffix")]
		public string Suffix
		{
			get
			{
				return GetAttributeValue<string>("suffix");
			}
			set
			{
				OnPropertyChanging("Suffix");
				SetAttributeValue("suffix", value);
				OnPropertyChanged("Suffix");
			}
		}
		
		/// <summary>
		/// Number of users or conversations followed the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamsfollowed")]
		public Nullable<int> TeamsFollowed
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("teamsfollowed");
			}
			set
			{
				OnPropertyChanging("TeamsFollowed");
				SetAttributeValue("teamsfollowed", value);
				OnPropertyChanged("TeamsFollowed");
			}
		}
		
		/// <summary>
		/// Type the main phone number for this contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone1")]
		public string Telephone1
		{
			get
			{
				return GetAttributeValue<string>("telephone1");
			}
			set
			{
				OnPropertyChanging("Telephone1");
				SetAttributeValue("telephone1", value);
				OnPropertyChanged("Telephone1");
			}
		}
		
		/// <summary>
		/// Type a second phone number for this contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone2")]
		public string Telephone2
		{
			get
			{
				return GetAttributeValue<string>("telephone2");
			}
			set
			{
				OnPropertyChanging("Telephone2");
				SetAttributeValue("telephone2", value);
				OnPropertyChanged("Telephone2");
			}
		}
		
		/// <summary>
		/// Type a third phone number for this contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("telephone3")]
		public string Telephone3
		{
			get
			{
				return GetAttributeValue<string>("telephone3");
			}
			set
			{
				OnPropertyChanging("Telephone3");
				SetAttributeValue("telephone3", value);
				OnPropertyChanged("Telephone3");
			}
		}
		
		/// <summary>
		/// Select a region or territory for the contact for use in segmentation and analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("territorycode")]
		public virtual contact_territorycode? TerritoryCode
		{
			get
			{
				return ((contact_territorycode?)(EntityOptionSetEnum.GetEnum(this, "territorycode")));
			}
			set
			{
				OnPropertyChanging("TerritoryCode");
				SetAttributeValue("territorycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("TerritoryCode");
			}
		}
		
		/// <summary>
		/// Total time spent for emails (read and write) and meetings by me in relation to the contact record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
		public string TimeSpentByMeOnEmailAndMeetings
		{
			get
			{
				return GetAttributeValue<string>("timespentbymeonemailandmeetings");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				OnPropertyChanging("TimeZoneRuleVersionNumber");
				SetAttributeValue("timezoneruleversionnumber", value);
				OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				OnPropertyChanging("TransactionCurrencyId");
				SetAttributeValue("transactioncurrencyid", value);
				OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return GetAttributeValue<string>("traversedpath");
			}
			set
			{
				OnPropertyChanging("TraversedPath");
				SetAttributeValue("traversedpath", value);
				OnPropertyChanged("TraversedPath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				OnPropertyChanging("UTCConversionTimeZoneCode");
				SetAttributeValue("utcconversiontimezonecode", value);
				OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version number of the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public Nullable<long> VersionNumber
		{
			get
			{
				return GetAttributeValue<Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Type the contact's professional or personal website or blog URL.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("websiteurl")]
		public string WebSiteUrl
		{
			get
			{
				return GetAttributeValue<string>("websiteurl");
			}
			set
			{
				OnPropertyChanging("WebSiteUrl");
				SetAttributeValue("websiteurl", value);
				OnPropertyChanged("WebSiteUrl");
			}
		}
		
		/// <summary>
		/// Type the phonetic spelling of the contact's first name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomifirstname")]
		public string YomiFirstName
		{
			get
			{
				return GetAttributeValue<string>("yomifirstname");
			}
			set
			{
				OnPropertyChanging("YomiFirstName");
				SetAttributeValue("yomifirstname", value);
				OnPropertyChanged("YomiFirstName");
			}
		}
		
		/// <summary>
		/// Shows the combined Yomi first and last names of the contact so that the full phonetic name can be displayed in views and reports.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomifullname")]
		public string YomiFullName
		{
			get
			{
				return GetAttributeValue<string>("yomifullname");
			}
		}
		
		/// <summary>
		/// Type the phonetic spelling of the contact's last name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomilastname")]
		public string YomiLastName
		{
			get
			{
				return GetAttributeValue<string>("yomilastname");
			}
			set
			{
				OnPropertyChanging("YomiLastName");
				SetAttributeValue("yomilastname", value);
				OnPropertyChanged("YomiLastName");
			}
		}
		
		/// <summary>
		/// Type the phonetic spelling of the contact's middle name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yomimiddlename")]
		public string YomiMiddleName
		{
			get
			{
				return GetAttributeValue<string>("yomimiddlename");
			}
			set
			{
				OnPropertyChanging("YomiMiddleName");
				SetAttributeValue("yomimiddlename", value);
				OnPropertyChanged("YomiMiddleName");
			}
		}
		
		/// <summary>
		/// 1:N account_primary_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_primary_contact")]
		public IEnumerable<Account> account_primary_contact
		{
			get
			{
				return GetRelatedEntities<Account>("account_primary_contact", null);
			}
			set
			{
				OnPropertyChanging("account_primary_contact");
				SetRelatedEntities<Account>("account_primary_contact", null, value);
				OnPropertyChanged("account_primary_contact");
			}
		}
		
		/// <summary>
		/// 1:N contact_as_primary_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_as_primary_contact")]
		public IEnumerable<Incident> contact_as_primary_contact
		{
			get
			{
				return GetRelatedEntities<Incident>("contact_as_primary_contact", null);
			}
			set
			{
				OnPropertyChanging("contact_as_primary_contact");
				SetRelatedEntities<Incident>("contact_as_primary_contact", null, value);
				OnPropertyChanged("contact_as_primary_contact");
			}
		}
		
		/// <summary>
		/// 1:N contact_as_responsible_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_as_responsible_contact")]
		public IEnumerable<Incident> contact_as_responsible_contact
		{
			get
			{
				return GetRelatedEntities<Incident>("contact_as_responsible_contact", null);
			}
			set
			{
				OnPropertyChanging("contact_as_responsible_contact");
				SetRelatedEntities<Incident>("contact_as_responsible_contact", null, value);
				OnPropertyChanged("contact_as_responsible_contact");
			}
		}
		
		/// <summary>
		/// 1:N contact_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public IEnumerable<Contact> Referencedcontact_customer_contacts
		{
			get
			{
				return GetRelatedEntities<Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				OnPropertyChanging("Referencedcontact_customer_contacts");
				SetRelatedEntities<Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				OnPropertyChanged("Referencedcontact_customer_contacts");
			}
		}
		
		/// <summary>
		/// 1:N contact_master_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public IEnumerable<Contact> Referencedcontact_master_contact
		{
			get
			{
				return GetRelatedEntities<Contact>("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				OnPropertyChanging("Referencedcontact_master_contact");
				SetRelatedEntities<Contact>("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				OnPropertyChanged("Referencedcontact_master_contact");
			}
		}
		
		/// <summary>
		/// 1:N incident_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_customer_contacts")]
		public IEnumerable<Incident> incident_customer_contacts
		{
			get
			{
				return GetRelatedEntities<Incident>("incident_customer_contacts", null);
			}
			set
			{
				OnPropertyChanging("incident_customer_contacts");
				SetRelatedEntities<Incident>("incident_customer_contacts", null, value);
				OnPropertyChanged("incident_customer_contacts");
			}
		}
		
		/// <summary>
		/// N:1 contact_customer_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_accounts")]
		public Account contact_customer_accounts
		{
			get
			{
				return GetRelatedEntity<Account>("contact_customer_accounts", null);
			}
			set
			{
				OnPropertyChanging("contact_customer_accounts");
				SetRelatedEntity<Account>("contact_customer_accounts", null, value);
				OnPropertyChanged("contact_customer_accounts");
			}
		}
		
		/// <summary>
		/// N:1 contact_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Contact Referencingcontact_customer_contacts
		{
			get
			{
				return GetRelatedEntity<Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			set
			{
				OnPropertyChanging("Referencingcontact_customer_contacts");
				SetRelatedEntity<Contact>("contact_customer_contacts", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				OnPropertyChanged("Referencingcontact_customer_contacts");
			}
		}
		
		/// <summary>
		/// N:1 contact_master_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Contact Referencingcontact_master_contact
		{
			get
			{
				return GetRelatedEntity<Contact>("contact_master_contact", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
		}
		
		/// <summary>
		/// N:1 msa_contact_managingpartner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msa_managingpartnerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msa_contact_managingpartner")]
		public Account msa_contact_managingpartner
		{
			get
			{
				return GetRelatedEntity<Account>("msa_contact_managingpartner", null);
			}
			set
			{
				OnPropertyChanging("msa_contact_managingpartner");
				SetRelatedEntity<Account>("msa_contact_managingpartner", null, value);
				OnPropertyChanged("msa_contact_managingpartner");
			}
		}
	}
}
#pragma warning restore CS1591
