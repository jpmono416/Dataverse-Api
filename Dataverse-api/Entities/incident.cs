using Dataverse_api.Entities.OptionSets;

#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dataverse_api.Entities
{
	
	
	/// <summary>
	/// Information that specifies the type of case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum incident_casetypecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Question = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Problem = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Request = 3,
	}
	
	/// <summary>
	/// Response level for the case. The response level corresponds to the level of service specified in the contract.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum incident_contractservicelevelcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gold = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Silver = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bronze = 3,
	}
	
	/// <summary>
	/// Customer's level of satisfaction with the resolution of the case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum incident_customersatisfactioncode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VerySatisfied = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Satisfied = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Neutral = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dissatisfied = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VeryDissatisfied = 1,
	}
	
	/// <summary>
	/// First Response SLA Status
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum incident_firstresponseslastatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NearingNoncompliance = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Noncompliant = 4,
	}
	
	/// <summary>
	/// Stage of the resolution process for the case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum incident_incidentstagecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Priority of the case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum incident_prioritycode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		High = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Normal = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Low = 3,
	}
	
	/// <summary>
	/// ResolveBy SLA Status
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum incident_resolvebyslastatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NearingNoncompliance = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Succeeded = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Noncompliant = 4,
	}
	
	/// <summary>
	/// Severity of the case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum incident_severitycode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DefaultValue = 1,
	}
	
	/// <summary>
	/// Status of the case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum incident_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Resolved = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 2,
	}
	
	/// <summary>
	/// Reason for the status of the case.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum incident_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ProblemSolved = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InformationProvided = 1000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cancelled = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Merged = 2000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnHold = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WaitingforDetails = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Researching = 4,
	}
	
	/// <summary>
	/// Service request case associated with a contract.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("incident")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public partial class Incident : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Incident() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "incident";
		
		public const string EntityLogicalCollectionName = "incidents";
		
		public const string EntitySetName = "incidents";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((PropertyChanged != null))
			{
				PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((PropertyChanging != null))
			{
				PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the account with which the case is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public Microsoft.Xrm.Sdk.EntityReference AccountId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
			}
		}
		
		/// <summary>
		/// This attribute is used for Sample Service Business Processes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitiescomplete")]
		public Nullable<bool> ActivitiesComplete
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("activitiescomplete");
			}
			set
			{
				OnPropertyChanging("ActivitiesComplete");
				SetAttributeValue("activitiescomplete", value);
				OnPropertyChanged("ActivitiesComplete");
			}
		}
		
		/// <summary>
		/// Type the number of service units that were actually required to resolve the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualserviceunits")]
		public Nullable<int> ActualServiceUnits
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("actualserviceunits");
			}
			set
			{
				OnPropertyChanging("ActualServiceUnits");
				SetAttributeValue("actualserviceunits", value);
				OnPropertyChanged("ActualServiceUnits");
			}
		}
		
		/// <summary>
		/// Type the number of service units that were billed to the customer for the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billedserviceunits")]
		public Nullable<int> BilledServiceUnits
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("billedserviceunits");
			}
			set
			{
				OnPropertyChanging("BilledServiceUnits");
				SetAttributeValue("billedserviceunits", value);
				OnPropertyChanged("BilledServiceUnits");
			}
		}
		
		/// <summary>
		/// Details whether the profile is blocked or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("blockedprofile")]
		public Nullable<bool> BlockedProfile
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("blockedprofile");
			}
			set
			{
				OnPropertyChanging("BlockedProfile");
				SetAttributeValue("blockedprofile", value);
				OnPropertyChanged("BlockedProfile");
			}
		}
		
		/// <summary>
		/// Shows the duration for which the Case has been active for Active and Resolved Cases.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("caseage")]
		public string caseage
		{
			get
			{
				return GetAttributeValue<string>("caseage");
			}
		}
		
		/// <summary>
		/// Select how contact about the case was originated, such as email, phone, or web, for use in reporting and analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("caseorigincode")]
		public virtual incident_caseorigincode? CaseOriginCode
		{
			get
			{
				return ((incident_caseorigincode?)(EntityOptionSetEnum.GetEnum(this, "caseorigincode")));
			}
			set
			{
				OnPropertyChanging("CaseOriginCode");
				SetAttributeValue("caseorigincode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("CaseOriginCode");
			}
		}
		
		/// <summary>
		/// Select the type of case to identify the incident for use in case routing and analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("casetypecode")]
		public virtual incident_casetypecode? CaseTypeCode
		{
			get
			{
				return ((incident_casetypecode?)(EntityOptionSetEnum.GetEnum(this, "casetypecode")));
			}
			set
			{
				OnPropertyChanging("CaseTypeCode");
				SetAttributeValue("casetypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("CaseTypeCode");
			}
		}
		
		/// <summary>
		/// This attribute is used for Sample Service Business Processes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkemail")]
		public Nullable<bool> CheckEmail
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("checkemail");
			}
			set
			{
				OnPropertyChanging("CheckEmail");
				SetAttributeValue("checkemail", value);
				OnPropertyChanged("CheckEmail");
			}
		}
		
		/// <summary>
		/// Unique identifier of the contact associated with the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public Microsoft.Xrm.Sdk.EntityReference ContactId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contactid");
			}
		}
		
		/// <summary>
		/// Choose the contract line that the case should be logged under to make sure the customer is charged correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractdetailid")]
		public Microsoft.Xrm.Sdk.EntityReference ContractDetailId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contractdetailid");
			}
			set
			{
				OnPropertyChanging("ContractDetailId");
				SetAttributeValue("contractdetailid", value);
				OnPropertyChanged("ContractDetailId");
			}
		}
		
		/// <summary>
		/// Choose the service contract that the case should be logged under to make sure the customer is eligible for support services.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractid")]
		public Microsoft.Xrm.Sdk.EntityReference ContractId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contractid");
			}
			set
			{
				OnPropertyChanging("ContractId");
				SetAttributeValue("contractid", value);
				OnPropertyChanged("ContractId");
			}
		}
		
		/// <summary>
		/// Select the service level for the case to make sure the case is handled correctly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractservicelevelcode")]
		public virtual incident_contractservicelevelcode? ContractServiceLevelCode
		{
			get
			{
				return ((incident_contractservicelevelcode?)(EntityOptionSetEnum.GetEnum(this, "contractservicelevelcode")));
			}
			set
			{
				OnPropertyChanging("ContractServiceLevelCode");
				SetAttributeValue("contractservicelevelcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("ContractServiceLevelCode");
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the external party who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedByExternalParty
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdbyexternalparty");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public Nullable<DateTime> CreatedOn
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		/// <summary>
		/// Tells whether customer service representative has contacted the customer or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customercontacted")]
		public Nullable<bool> CustomerContacted
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("customercontacted");
			}
			set
			{
				OnPropertyChanging("CustomerContacted");
				SetAttributeValue("customercontacted", value);
				OnPropertyChanged("CustomerContacted");
			}
		}
		
		/// <summary>
		/// Select the customer account or contact to provide a quick link to additional customer details, such as account information, activities, and opportunities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		public Microsoft.Xrm.Sdk.EntityReference CustomerId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("customerid");
			}
			set
			{
				OnPropertyChanging("CustomerId");
				SetAttributeValue("customerid", value);
				OnPropertyChanged("CustomerId");
			}
		}
		
		/// <summary>
		/// Select the customer's level of satisfaction with the handling and resolution of the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersatisfactioncode")]
		public virtual incident_customersatisfactioncode? CustomerSatisfactionCode
		{
			get
			{
				return ((incident_customersatisfactioncode?)(EntityOptionSetEnum.GetEnum(this, "customersatisfactioncode")));
			}
			set
			{
				OnPropertyChanging("CustomerSatisfactionCode");
				SetAttributeValue("customersatisfactioncode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("CustomerSatisfactionCode");
			}
		}
		
		/// <summary>
		/// Shows the date time when the Case was resolved.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deactivatedon")]
		public Nullable<DateTime> deactivatedon
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("deactivatedon");
			}
			set
			{
				OnPropertyChanging("deactivatedon");
				SetAttributeValue("deactivatedon", value);
				OnPropertyChanged("deactivatedon");
			}
		}
		
		/// <summary>
		/// Shows whether terms of the associated entitlement should be decremented or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decremententitlementterm")]
		public Nullable<bool> DecrementEntitlementTerm
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("decremententitlementterm");
			}
			set
			{
				OnPropertyChanging("DecrementEntitlementTerm");
				SetAttributeValue("decremententitlementterm", value);
				OnPropertyChanged("DecrementEntitlementTerm");
			}
		}
		
		/// <summary>
		/// Type additional information to describe the case to assist the service team in reaching a resolution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return GetAttributeValue<string>("description");
			}
			set
			{
				OnPropertyChanging("Description");
				SetAttributeValue("description", value);
				OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// The primary email address for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
		public string EmailAddress
		{
			get
			{
				return GetAttributeValue<string>("emailaddress");
			}
			set
			{
				OnPropertyChanging("EmailAddress");
				SetAttributeValue("emailaddress", value);
				OnPropertyChanged("EmailAddress");
			}
		}
		
		/// <summary>
		/// Choose the entitlement that is applicable for the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementid")]
		public Microsoft.Xrm.Sdk.EntityReference EntitlementId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("entitlementid");
			}
			set
			{
				OnPropertyChanging("EntitlementId");
				SetAttributeValue("entitlementid", value);
				OnPropertyChanged("EntitlementId");
			}
		}
		
		/// <summary>
		/// The default image for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			get
			{
				return GetAttributeValue<byte[]>("entityimage");
			}
			set
			{
				OnPropertyChanging("EntityImage");
				SetAttributeValue("entityimage", value);
				OnPropertyChanged("EntityImage");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public Nullable<long> EntityImage_Timestamp
		{
			get
			{
				return GetAttributeValue<Nullable<long>>("entityimage_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			get
			{
				return GetAttributeValue<string>("entityimage_url");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public Nullable<Guid> EntityImageId
		{
			get
			{
				return GetAttributeValue<Nullable<Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Indicates the date and time when the case was escalated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("escalatedon")]
		public Nullable<DateTime> EscalatedOn
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("escalatedon");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public Nullable<decimal> ExchangeRate
		{
			get
			{
				return GetAttributeValue<Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Select an existing case for the customer that has been populated. For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("existingcase")]
		public Microsoft.Xrm.Sdk.EntityReference ExistingCase
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("existingcase");
			}
			set
			{
				OnPropertyChanging("ExistingCase");
				SetAttributeValue("existingcase", value);
				OnPropertyChanged("ExistingCase");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstresponsebykpiid")]
		public Microsoft.Xrm.Sdk.EntityReference FirstResponseByKPIId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("firstresponsebykpiid");
			}
			set
			{
				OnPropertyChanging("FirstResponseByKPIId");
				SetAttributeValue("firstresponsebykpiid", value);
				OnPropertyChanged("FirstResponseByKPIId");
			}
		}
		
		/// <summary>
		/// Indicates if the first response has been sent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstresponsesent")]
		public Nullable<bool> FirstResponseSent
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("firstresponsesent");
			}
			set
			{
				OnPropertyChanging("FirstResponseSent");
				SetAttributeValue("firstresponsesent", value);
				OnPropertyChanged("FirstResponseSent");
			}
		}
		
		/// <summary>
		/// Shows the status of the initial response time for the case according to the terms of the SLA.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstresponseslastatus")]
		public virtual incident_firstresponseslastatus? FirstResponseSLAStatus
		{
			get
			{
				return ((incident_firstresponseslastatus?)(EntityOptionSetEnum.GetEnum(this, "firstresponseslastatus")));
			}
			set
			{
				OnPropertyChanging("FirstResponseSLAStatus");
				SetAttributeValue("firstresponseslastatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("FirstResponseSLAStatus");
			}
		}
		
		/// <summary>
		/// Enter the date by which a customer service representative has to follow up with the customer on this case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followupby")]
		public Nullable<DateTime> FollowupBy
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("followupby");
			}
			set
			{
				OnPropertyChanging("FollowupBy");
				SetAttributeValue("followupby", value);
				OnPropertyChanged("FollowupBy");
			}
		}
		
		/// <summary>
		/// This attribute is used for Sample Service Business Processes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followuptaskcreated")]
		public Nullable<bool> FollowUpTaskCreated
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("followuptaskcreated");
			}
			set
			{
				OnPropertyChanging("FollowUpTaskCreated");
				SetAttributeValue("followuptaskcreated", value);
				OnPropertyChanged("FollowUpTaskCreated");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public Nullable<int> ImportSequenceNumber
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("importsequencenumber");
			}
			set
			{
				OnPropertyChanging("ImportSequenceNumber");
				SetAttributeValue("importsequencenumber", value);
				OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incidentid")]
		public Nullable<Guid> IncidentId
		{
			get
			{
				return GetAttributeValue<Nullable<Guid>>("incidentid");
			}
			set
			{
				OnPropertyChanging("IncidentId");
				SetAttributeValue("incidentid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = Guid.Empty;
				}
				OnPropertyChanged("IncidentId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incidentid")]
		public override Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				IncidentId = value;
			}
		}
		
		/// <summary>
		/// Select the current stage of the service process for the case to assist service team members when they review or transfer a case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incidentstagecode")]
		public virtual incident_incidentstagecode? IncidentStageCode
		{
			get
			{
				return ((incident_incidentstagecode?)(EntityOptionSetEnum.GetEnum(this, "incidentstagecode")));
			}
			set
			{
				OnPropertyChanging("IncidentStageCode");
				SetAttributeValue("incidentstagecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("IncidentStageCode");
			}
		}
		
		/// <summary>
		/// Will contain the Influencer score coming from NetBreeze.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("influencescore")]
		public Nullable<double> InfluenceScore
		{
			get
			{
				return GetAttributeValue<Nullable<double>>("influencescore");
			}
			set
			{
				OnPropertyChanging("InfluenceScore");
				SetAttributeValue("influencescore", value);
				OnPropertyChanged("InfluenceScore");
			}
		}
		
		/// <summary>
		/// For system use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdecrementing")]
		public Nullable<bool> IsDecrementing
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("isdecrementing");
			}
			set
			{
				OnPropertyChanging("IsDecrementing");
				SetAttributeValue("isdecrementing", value);
				OnPropertyChanged("IsDecrementing");
			}
		}
		
		/// <summary>
		/// Indicates if the case has been escalated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isescalated")]
		public Nullable<bool> IsEscalated
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("isescalated");
			}
			set
			{
				OnPropertyChanging("IsEscalated");
				SetAttributeValue("isescalated", value);
				OnPropertyChanged("IsEscalated");
			}
		}
		
		/// <summary>
		/// Choose the article that contains additional information or a resolution for the case, for reference during research or follow up with the customer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("kbarticleid")]
		public Microsoft.Xrm.Sdk.EntityReference KbArticleId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("kbarticleid");
			}
			set
			{
				OnPropertyChanging("KbArticleId");
				SetAttributeValue("kbarticleid", value);
				OnPropertyChanged("KbArticleId");
			}
		}
		
		/// <summary>
		/// Shows the latest activity associated with the Case and the action performed on that activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastinteraction")]
		public string lastinteraction
		{
			get
			{
				return GetAttributeValue<string>("lastinteraction");
			}
		}
		
		/// <summary>
		/// Contains the date time stamp of the last on hold time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public Nullable<DateTime> LastOnHoldTime
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("lastonholdtime");
			}
			set
			{
				OnPropertyChanging("LastOnHoldTime");
				SetAttributeValue("lastonholdtime", value);
				OnPropertyChanged("LastOnHoldTime");
			}
		}
		
		/// <summary>
		/// Choose the primary case the current case was merged into.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		public Microsoft.Xrm.Sdk.EntityReference MasterId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("masterid");
			}
			set
			{
				OnPropertyChanging("MasterId");
				SetAttributeValue("masterid", value);
				OnPropertyChanged("MasterId");
			}
		}
		
		/// <summary>
		/// Tells whether the incident has been merged with another incident.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("merged")]
		public Nullable<bool> Merged
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("merged");
			}
		}
		
		/// <summary>
		/// Shows whether the post originated as a public or private message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messagetypecode")]
		public virtual socialactivity_postmessagetype? MessageTypeCode
		{
			get
			{
				return ((socialactivity_postmessagetype?)(EntityOptionSetEnum.GetEnum(this, "messagetypecode")));
			}
			set
			{
				OnPropertyChanging("MessageTypeCode");
				SetAttributeValue("messagetypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("MessageTypeCode");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the external party who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalparty")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedByExternalParty
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedbyexternalparty");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public Nullable<DateTime> ModifiedOn
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// Survey invite url for customer feedback.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_casesurveyinviteurl")]
		public string msdyn_CaseSurveyInviteUrl
		{
			get
			{
				return GetAttributeValue<string>("msdyn_casesurveyinviteurl");
			}
			set
			{
				OnPropertyChanging("msdyn_CaseSurveyInviteUrl");
				SetAttributeValue("msdyn_casesurveyinviteurl", value);
				OnPropertyChanged("msdyn_CaseSurveyInviteUrl");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_copilotengaged")]
		public Nullable<bool> msdyn_copilotengaged
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("msdyn_copilotengaged");
			}
			set
			{
				OnPropertyChanging("msdyn_copilotengaged");
				SetAttributeValue("msdyn_copilotengaged", value);
				OnPropertyChanged("msdyn_copilotengaged");
			}
		}
		
		/// <summary>
		/// The iot alert that initiated this case
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_iotalert")]
		public Microsoft.Xrm.Sdk.EntityReference msdyn_iotalert
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_iotalert");
			}
			set
			{
				OnPropertyChanging("msdyn_iotalert");
				SetAttributeValue("msdyn_iotalert", value);
				OnPropertyChanged("msdyn_iotalert");
			}
		}
		
		/// <summary>
		/// Entity Attachments Id before the case record is created
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_precreateattachmentsid")]
		public string msdyn_precreateattachmentsid
		{
			get
			{
				return GetAttributeValue<string>("msdyn_precreateattachmentsid");
			}
			set
			{
				OnPropertyChanging("msdyn_precreateattachmentsid");
				SetAttributeValue("msdyn_precreateattachmentsid", value);
				OnPropertyChanged("msdyn_precreateattachmentsid");
			}
		}
		
		/// <summary>
		/// Notes Id before the case record is created
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_precreatenotesid")]
		public string msdyn_precreatenotesid
		{
			get
			{
				return GetAttributeValue<string>("msdyn_precreatenotesid");
			}
			set
			{
				OnPropertyChanging("msdyn_precreatenotesid");
				SetAttributeValue("msdyn_precreatenotesid", value);
				OnPropertyChanged("msdyn_precreatenotesid");
			}
		}
		
		/// <summary>
		/// Shows the unresolved SLA KPI associated with the Case with the earliest expiry time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nextsla")]
		public string nextsla
		{
			get
			{
				return GetAttributeValue<string>("nextsla");
			}
			set
			{
				OnPropertyChanging("nextsla");
				SetAttributeValue("nextsla", value);
				OnPropertyChanged("nextsla");
			}
		}
		
		/// <summary>
		/// Number of child incidents associated with the incident.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberofchildincidents")]
		public Nullable<int> NumberOfChildIncidents
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("numberofchildincidents");
			}
		}
		
		/// <summary>
		/// Shows the duration in minutes for which the case was on hold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public Nullable<int> OnHoldTime
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public Nullable<DateTime> OverriddenCreatedOn
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("overriddencreatedon");
			}
			set
			{
				OnPropertyChanging("OverriddenCreatedOn");
				SetAttributeValue("overriddencreatedon", value);
				OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				OnPropertyChanging("OwnerId");
				SetAttributeValue("ownerid", value);
				OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Choose the parent case for a case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcaseid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentCaseId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcaseid");
			}
			set
			{
				OnPropertyChanging("ParentCaseId");
				SetAttributeValue("parentcaseid", value);
				OnPropertyChanged("ParentCaseId");
			}
		}
		
		/// <summary>
		/// Select a primary contact for this case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactid")]
		public Microsoft.Xrm.Sdk.EntityReference PrimaryContactId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("primarycontactid");
			}
			set
			{
				OnPropertyChanging("PrimaryContactId");
				SetAttributeValue("primarycontactid", value);
				OnPropertyChanged("PrimaryContactId");
			}
		}
		
		/// <summary>
		/// Select the priority so that preferred customers or critical issues are handled quickly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual incident_prioritycode? PriorityCode
		{
			get
			{
				return ((incident_prioritycode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			set
			{
				OnPropertyChanging("PriorityCode");
				SetAttributeValue("prioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("PriorityCode");
			}
		}
		
		/// <summary>
		/// Contains the id of the process associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public Nullable<Guid> ProcessId
		{
			get
			{
				return GetAttributeValue<Nullable<Guid>>("processid");
			}
			set
			{
				OnPropertyChanging("ProcessId");
				SetAttributeValue("processid", value);
				OnPropertyChanged("ProcessId");
			}
		}
		
		/// <summary>
		/// Choose the product associated with the case to identify warranty, service, or other product issues and be able to report the number of incidents for each product.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productid")]
		public Microsoft.Xrm.Sdk.EntityReference ProductId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("productid");
			}
			set
			{
				OnPropertyChanging("ProductId");
				SetAttributeValue("productid", value);
				OnPropertyChanged("ProductId");
			}
		}
		
		/// <summary>
		/// Type the serial number of the product that is associated with this case, so that the number of cases per product can be reported.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productserialnumber")]
		public string ProductSerialNumber
		{
			get
			{
				return GetAttributeValue<string>("productserialnumber");
			}
			set
			{
				OnPropertyChanging("ProductSerialNumber");
				SetAttributeValue("productserialnumber", value);
				OnPropertyChanged("ProductSerialNumber");
			}
		}
		
		/// <summary>
		/// Enter the date by when the case must be resolved.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolveby")]
		public Nullable<DateTime> ResolveBy
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("resolveby");
			}
			set
			{
				OnPropertyChanging("ResolveBy");
				SetAttributeValue("resolveby", value);
				OnPropertyChanged("ResolveBy");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvebykpiid")]
		public Microsoft.Xrm.Sdk.EntityReference ResolveByKPIId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("resolvebykpiid");
			}
			set
			{
				OnPropertyChanging("ResolveByKPIId");
				SetAttributeValue("resolvebykpiid", value);
				OnPropertyChanged("ResolveByKPIId");
			}
		}
		
		/// <summary>
		/// Shows the status of the resolution time for the case according to the terms of the SLA.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvebyslastatus")]
		public virtual incident_resolvebyslastatus? ResolveBySLAStatus
		{
			get
			{
				return ((incident_resolvebyslastatus?)(EntityOptionSetEnum.GetEnum(this, "resolvebyslastatus")));
			}
			set
			{
				OnPropertyChanging("ResolveBySLAStatus");
				SetAttributeValue("resolvebyslastatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("ResolveBySLAStatus");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responseby")]
		public Nullable<DateTime> ResponseBy
		{
			get
			{
				return GetAttributeValue<Nullable<DateTime>>("responseby");
			}
			set
			{
				OnPropertyChanging("ResponseBy");
				SetAttributeValue("responseby", value);
				OnPropertyChanged("ResponseBy");
			}
		}
		
		/// <summary>
		/// Choose an additional customer contact who can also help resolve the case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responsiblecontactid")]
		[Obsolete()]
		public Microsoft.Xrm.Sdk.EntityReference ResponsibleContactId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("responsiblecontactid");
			}
			set
			{
				OnPropertyChanging("ResponsibleContactId");
				SetAttributeValue("responsiblecontactid", value);
				OnPropertyChanged("ResponsibleContactId");
			}
		}
		
		/// <summary>
		/// Tells whether the incident has been routed to queue or not.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("routecase")]
		public Nullable<bool> RouteCase
		{
			get
			{
				return GetAttributeValue<Nullable<bool>>("routecase");
			}
			set
			{
				OnPropertyChanging("RouteCase");
				SetAttributeValue("routecase", value);
				OnPropertyChanged("RouteCase");
			}
		}
		
		/// <summary>
		/// Value derived after assessing words commonly associated with a negative, neutral, or positive sentiment that occurs in a social post. Sentiment information can also be reported as numeric values.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sentimentvalue")]
		public Nullable<double> SentimentValue
		{
			get
			{
				return GetAttributeValue<Nullable<double>>("sentimentvalue");
			}
			set
			{
				OnPropertyChanging("SentimentValue");
				SetAttributeValue("sentimentvalue", value);
				OnPropertyChanged("SentimentValue");
			}
		}
		
		/// <summary>
		/// Select the stage, in the case resolution process, that the case is in.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("servicestage")]
		public virtual servicestage? ServiceStage
		{
			get
			{
				return ((servicestage?)(EntityOptionSetEnum.GetEnum(this, "servicestage")));
			}
			set
			{
				OnPropertyChanging("ServiceStage");
				SetAttributeValue("servicestage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("ServiceStage");
			}
		}
		
		/// <summary>
		/// Select the severity of this case to indicate the incident's impact on the customer's business.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("severitycode")]
		public virtual incident_severitycode? SeverityCode
		{
			get
			{
				return ((incident_severitycode?)(EntityOptionSetEnum.GetEnum(this, "severitycode")));
			}
			set
			{
				OnPropertyChanging("SeverityCode");
				SetAttributeValue("severitycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("SeverityCode");
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the case record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			set
			{
				OnPropertyChanging("SLAId");
				SetAttributeValue("slaid", value);
				OnPropertyChanged("SLAId");
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this case. This field is for internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAInvokedId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the social profile with which the case is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("socialprofileid")]
		public Microsoft.Xrm.Sdk.EntityReference SocialProfileId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("socialprofileid");
			}
			set
			{
				OnPropertyChanging("SocialProfileId");
				SetAttributeValue("socialprofileid", value);
				OnPropertyChanged("SocialProfileId");
			}
		}
		
		/// <summary>
		/// Contains the id of the stage where the entity is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public Nullable<Guid> StageId
		{
			get
			{
				return GetAttributeValue<Nullable<Guid>>("stageid");
			}
			set
			{
				OnPropertyChanging("StageId");
				SetAttributeValue("stageid", value);
				OnPropertyChanged("StageId");
			}
		}
		
		/// <summary>
		/// Shows whether the case is active, resolved, or canceled. Resolved and canceled cases are read-only and can't be edited unless they are reactivated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual incident_statecode? StateCode
		{
			get
			{
				return ((incident_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				OnPropertyChanging("StateCode");
				SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the case's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual incident_statuscode? StatusCode
		{
			get
			{
				return ((incident_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				OnPropertyChanging("StatusCode");
				SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Choose the subject for the case, such as catalog request or product complaint, so customer service managers can identify frequent requests or problem areas. Administrators can configure subjects under Business Management in the Settings area.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subjectid")]
		public Microsoft.Xrm.Sdk.EntityReference SubjectId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("subjectid");
			}
			set
			{
				OnPropertyChanging("SubjectId");
				SetAttributeValue("subjectid", value);
				OnPropertyChanged("SubjectId");
			}
		}
		
		/// <summary>
		/// Shows the case number for customer reference and searching capabilities. This cannot be modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ticketnumber")]
		public string TicketNumber
		{
			get
			{
				return GetAttributeValue<string>("ticketnumber");
			}
			set
			{
				OnPropertyChanging("TicketNumber");
				SetAttributeValue("ticketnumber", value);
				OnPropertyChanged("TicketNumber");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				OnPropertyChanging("TimeZoneRuleVersionNumber");
				SetAttributeValue("timezoneruleversionnumber", value);
				OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Type a subject or descriptive name, such as the request, issue, or company name, to identify the case in Microsoft Dynamics 365 views.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
		public string Title
		{
			get
			{
				return GetAttributeValue<string>("title");
			}
			set
			{
				OnPropertyChanging("Title");
				SetAttributeValue("title", value);
				OnPropertyChanged("Title");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				OnPropertyChanging("TransactionCurrencyId");
				SetAttributeValue("transactioncurrencyid", value);
				OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return GetAttributeValue<string>("traversedpath");
			}
			set
			{
				OnPropertyChanging("TraversedPath");
				SetAttributeValue("traversedpath", value);
				OnPropertyChanged("TraversedPath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return GetAttributeValue<Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				OnPropertyChanging("UTCConversionTimeZoneCode");
				SetAttributeValue("utcconversiontimezonecode", value);
				OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public Nullable<long> VersionNumber
		{
			get
			{
				return GetAttributeValue<Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N incident_existingcase
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public IEnumerable<Incident> Referencedincident_existingcase
		{
			get
			{
				return GetRelatedEntities<Incident>("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				OnPropertyChanging("Referencedincident_existingcase");
				SetRelatedEntities<Incident>("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				OnPropertyChanged("Referencedincident_existingcase");
			}
		}
		
		/// <summary>
		/// 1:N incident_master_incident
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public IEnumerable<Incident> Referencedincident_master_incident
		{
			get
			{
				return GetRelatedEntities<Incident>("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				OnPropertyChanging("Referencedincident_master_incident");
				SetRelatedEntities<Incident>("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				OnPropertyChanged("Referencedincident_master_incident");
			}
		}
		
		/// <summary>
		/// 1:N incident_parent_incident
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public IEnumerable<Incident> Referencedincident_parent_incident
		{
			get
			{
				return GetRelatedEntities<Incident>("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				OnPropertyChanging("Referencedincident_parent_incident");
				SetRelatedEntities<Incident>("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				OnPropertyChanged("Referencedincident_parent_incident");
			}
		}
		
		/// <summary>
		/// N:1 contact_as_primary_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_as_primary_contact")]
		public Contact contact_as_primary_contact
		{
			get
			{
				return GetRelatedEntity<Contact>("contact_as_primary_contact", null);
			}
			set
			{
				OnPropertyChanging("contact_as_primary_contact");
				SetRelatedEntity<Contact>("contact_as_primary_contact", null, value);
				OnPropertyChanged("contact_as_primary_contact");
			}
		}
		
		/// <summary>
		/// N:1 contact_as_responsible_contact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responsiblecontactid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_as_responsible_contact")]
		public Contact contact_as_responsible_contact
		{
			get
			{
				return GetRelatedEntity<Contact>("contact_as_responsible_contact", null);
			}
			set
			{
				OnPropertyChanging("contact_as_responsible_contact");
				SetRelatedEntity<Contact>("contact_as_responsible_contact", null, value);
				OnPropertyChanged("contact_as_responsible_contact");
			}
		}
		
		/// <summary>
		/// N:1 incident_customer_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_customer_accounts")]
		public Account incident_customer_accounts
		{
			get
			{
				return GetRelatedEntity<Account>("incident_customer_accounts", null);
			}
			set
			{
				OnPropertyChanging("incident_customer_accounts");
				SetRelatedEntity<Account>("incident_customer_accounts", null, value);
				OnPropertyChanged("incident_customer_accounts");
			}
		}
		
		/// <summary>
		/// N:1 incident_customer_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_customer_contacts")]
		public Contact incident_customer_contacts
		{
			get
			{
				return GetRelatedEntity<Contact>("incident_customer_contacts", null);
			}
			set
			{
				OnPropertyChanging("incident_customer_contacts");
				SetRelatedEntity<Contact>("incident_customer_contacts", null, value);
				OnPropertyChanged("incident_customer_contacts");
			}
		}
		
		/// <summary>
		/// N:1 incident_existingcase
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("existingcase")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Incident Referencingincident_existingcase
		{
			get
			{
				return GetRelatedEntity<Incident>("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			set
			{
				OnPropertyChanging("Referencingincident_existingcase");
				SetRelatedEntity<Incident>("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				OnPropertyChanged("Referencingincident_existingcase");
			}
		}
		
		/// <summary>
		/// N:1 incident_master_incident
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Incident Referencingincident_master_incident
		{
			get
			{
				return GetRelatedEntity<Incident>("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			set
			{
				OnPropertyChanging("Referencingincident_master_incident");
				SetRelatedEntity<Incident>("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				OnPropertyChanged("Referencingincident_master_incident");
			}
		}
		
		/// <summary>
		/// N:1 incident_parent_incident
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcaseid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Incident Referencingincident_parent_incident
		{
			get
			{
				return GetRelatedEntity<Incident>("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			set
			{
				OnPropertyChanging("Referencingincident_parent_incident");
				SetRelatedEntity<Incident>("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				OnPropertyChanged("Referencingincident_parent_incident");
			}
		}
	}
}
#pragma warning restore CS1591
